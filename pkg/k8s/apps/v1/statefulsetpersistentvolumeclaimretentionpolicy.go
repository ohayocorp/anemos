// Code generated by types_generator.go; DO NOT EDIT.

package v1

import (
	"reflect"

	"github.com/ohayocorp/anemos/pkg/js"

	
)

// StatefulSetPersistentVolumeClaimRetentionPolicy describes the policy used for PVCs created from the StatefulSet VolumeClaimTemplates.
type StatefulSetPersistentVolumeClaimRetentionPolicy struct {
	// WhenDeleted specifies what happens to PVCs created from StatefulSet VolumeClaimTemplates when the StatefulSet is deleted. The default policy of `Retain` causes PVCs to not be affected by StatefulSet deletion. The `Delete` policy causes those PVCs to be deleted.
	WhenDeleted *string `json:"whenDeleted,omitempty" yaml:"whenDeleted,omitempty"`

	// WhenScaled specifies what happens to PVCs created from StatefulSet VolumeClaimTemplates when the StatefulSet is scaled down. The default policy of `Retain` causes PVCs to not be affected by a scaledown. The `Delete` policy causes the associated PVCs for any excess pods above the replica count to be deleted.
	WhenScaled *string `json:"whenScaled,omitempty" yaml:"whenScaled,omitempty"`
}

func NewStatefulSetPersistentVolumeClaimRetentionPolicy() *StatefulSetPersistentVolumeClaimRetentionPolicy {
	return &StatefulSetPersistentVolumeClaimRetentionPolicy{}
}

func NewStatefulSetPersistentVolumeClaimRetentionPolicyWithSpec(spec *StatefulSetPersistentVolumeClaimRetentionPolicy) *StatefulSetPersistentVolumeClaimRetentionPolicy {
	
	return spec
}

func RegisterStatefulSetPersistentVolumeClaimRetentionPolicy(jsRuntime *js.JsRuntime) {
	jsRuntime.Type(reflect.TypeFor[StatefulSetPersistentVolumeClaimRetentionPolicy]()).JsNamespace("k8s.apps.v1").Fields(
		js.Field("WhenDeleted"),
		js.Field("WhenScaled"),
	).Constructors(
		js.Constructor(reflect.ValueOf(NewStatefulSetPersistentVolumeClaimRetentionPolicy)),
		js.Constructor(reflect.ValueOf(NewStatefulSetPersistentVolumeClaimRetentionPolicyWithSpec)),
	)
}