// Code generated by types_generator.go; DO NOT EDIT.

package v1

import (
	"reflect"

	"github.com/ohayocorp/anemos/pkg/js"

	
)

// ReplicaSetStatus represents the current status of a ReplicaSet.
type ReplicaSetStatus struct {
	// The number of available non-terminating pods (ready for at least minReadySeconds) for this replica set.
	AvailableReplicas *int `json:"availableReplicas,omitempty" yaml:"availableReplicas,omitempty"`

	// Represents the latest available observations of a replica set's current state.
	Conditions []*ReplicaSetCondition `json:"conditions,omitempty" yaml:"conditions,omitempty"`

	// The number of non-terminating pods that have labels matching the labels of the pod template of the replicaset.
	FullyLabeledReplicas *int `json:"fullyLabeledReplicas,omitempty" yaml:"fullyLabeledReplicas,omitempty"`

	// ObservedGeneration reflects the generation of the most recently observed ReplicaSet.
	ObservedGeneration *int `json:"observedGeneration,omitempty" yaml:"observedGeneration,omitempty"`

	// The number of non-terminating pods targeted by this ReplicaSet with a Ready Condition.
	ReadyReplicas *int `json:"readyReplicas,omitempty" yaml:"readyReplicas,omitempty"`

	// Replicas is the most recently observed number of non-terminating pods. More info: https://kubernetes.io/docs/concepts/workloads/controllers/replicaset
	Replicas int `json:"replicas" yaml:"replicas"`

	// The number of terminating pods for this replica set. Terminating pods have a non-null .metadata.deletionTimestamp and have not yet reached the Failed or Succeeded .status.phase.
	// This is an alpha field. Enable DeploymentReplicaSetTerminatingReplicas to be able to use this field.
	TerminatingReplicas *int `json:"terminatingReplicas,omitempty" yaml:"terminatingReplicas,omitempty"`
}

func NewReplicaSetStatus() *ReplicaSetStatus {
	return &ReplicaSetStatus{}
}

func NewReplicaSetStatusWithSpec(spec *ReplicaSetStatus) *ReplicaSetStatus {
	
	return spec
}

func RegisterReplicaSetStatus(jsRuntime *js.JsRuntime) {
	jsRuntime.Type(reflect.TypeFor[ReplicaSetStatus]()).JsNamespace("k8s.apps.v1").Fields(
		js.Field("AvailableReplicas"),
		js.Field("Conditions"),
		js.Field("FullyLabeledReplicas"),
		js.Field("ObservedGeneration"),
		js.Field("ReadyReplicas"),
		js.Field("Replicas"),
		js.Field("TerminatingReplicas"),
	).Constructors(
		js.Constructor(reflect.ValueOf(NewReplicaSetStatus)),
		js.Constructor(reflect.ValueOf(NewReplicaSetStatusWithSpec)),
	)
}