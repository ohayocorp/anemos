// Code generated by types_generator.go; DO NOT EDIT.

package v1

import (
	"reflect"

	"github.com/ohayocorp/anemos/pkg/js"

	
)

// DeploymentStatus is the most recently observed status of the Deployment.
type DeploymentStatus struct {
	// Total number of available non-terminating pods (ready for at least minReadySeconds) targeted by this deployment.
	AvailableReplicas *int `json:"availableReplicas,omitempty" yaml:"availableReplicas,omitempty"`

	// Count of hash collisions for the Deployment. The Deployment controller uses this field as a collision avoidance mechanism when it needs to create the name for the newest ReplicaSet.
	CollisionCount *int `json:"collisionCount,omitempty" yaml:"collisionCount,omitempty"`

	// Represents the latest available observations of a deployment's current state.
	Conditions []*DeploymentCondition `json:"conditions,omitempty" yaml:"conditions,omitempty"`

	// The generation observed by the deployment controller.
	ObservedGeneration *int `json:"observedGeneration,omitempty" yaml:"observedGeneration,omitempty"`

	// Total number of non-terminating pods targeted by this Deployment with a Ready Condition.
	ReadyReplicas *int `json:"readyReplicas,omitempty" yaml:"readyReplicas,omitempty"`

	// Total number of non-terminating pods targeted by this deployment (their labels match the selector).
	Replicas *int `json:"replicas,omitempty" yaml:"replicas,omitempty"`

	// Total number of terminating pods targeted by this deployment. Terminating pods have a non-null .metadata.deletionTimestamp and have not yet reached the Failed or Succeeded .status.phase.
	// This is an alpha field. Enable DeploymentReplicaSetTerminatingReplicas to be able to use this field.
	TerminatingReplicas *int `json:"terminatingReplicas,omitempty" yaml:"terminatingReplicas,omitempty"`

	// Total number of unavailable pods targeted by this deployment. This is the total number of pods that are still required for the deployment to have 100% available capacity. They may either be pods that are running but not yet available or pods that still have not been created.
	UnavailableReplicas *int `json:"unavailableReplicas,omitempty" yaml:"unavailableReplicas,omitempty"`

	// Total number of non-terminating pods targeted by this deployment that have the desired template spec.
	UpdatedReplicas *int `json:"updatedReplicas,omitempty" yaml:"updatedReplicas,omitempty"`
}

func NewDeploymentStatus() *DeploymentStatus {
	return &DeploymentStatus{}
}

func NewDeploymentStatusWithSpec(spec *DeploymentStatus) *DeploymentStatus {
	
	return spec
}

func RegisterDeploymentStatus(jsRuntime *js.JsRuntime) {
	jsRuntime.Type(reflect.TypeFor[DeploymentStatus]()).JsNamespace("k8s.apps.v1").Fields(
		js.Field("AvailableReplicas"),
		js.Field("CollisionCount"),
		js.Field("Conditions"),
		js.Field("ObservedGeneration"),
		js.Field("ReadyReplicas"),
		js.Field("Replicas"),
		js.Field("TerminatingReplicas"),
		js.Field("UnavailableReplicas"),
		js.Field("UpdatedReplicas"),
	).Constructors(
		js.Constructor(reflect.ValueOf(NewDeploymentStatus)),
		js.Constructor(reflect.ValueOf(NewDeploymentStatusWithSpec)),
	)
}