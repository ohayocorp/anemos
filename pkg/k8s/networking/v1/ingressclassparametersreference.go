// Code generated by types_generator.go; DO NOT EDIT.

package v1

import (
	"reflect"

	"github.com/ohayocorp/anemos/pkg/js"

	
)

// IngressClassParametersReference identifies an API object. This can be used to specify a cluster or namespace-scoped resource.
type IngressClassParametersReference struct {
	// ApiGroup is the group for the resource being referenced. If APIGroup is not specified, the specified Kind must be in the core API group. For any other third-party types, APIGroup is required.
	ApiGroup *string `json:"apiGroup,omitempty" yaml:"apiGroup,omitempty"`

	// Kind is the type of resource being referenced.
	Kind string `json:"kind" yaml:"kind"`

	// Name is the name of resource being referenced.
	Name string `json:"name" yaml:"name"`

	// Namespace is the namespace of the resource being referenced. This field is required when scope is set to "Namespace" and must be unset when scope is set to "Cluster".
	Namespace *string `json:"namespace,omitempty" yaml:"namespace,omitempty"`

	// Scope represents if this refers to a cluster or namespace scoped resource. This may be set to "Cluster" (default) or "Namespace".
	Scope *string `json:"scope,omitempty" yaml:"scope,omitempty"`
}

func NewIngressClassParametersReference() *IngressClassParametersReference {
	return &IngressClassParametersReference{}
}

func NewIngressClassParametersReferenceWithSpec(spec *IngressClassParametersReference) *IngressClassParametersReference {
	
	return spec
}

func RegisterIngressClassParametersReference(jsRuntime *js.JsRuntime) {
	jsRuntime.Type(reflect.TypeFor[IngressClassParametersReference]()).JsNamespace("k8s.networking.v1").Fields(
		js.Field("ApiGroup"),
		js.Field("Kind"),
		js.Field("Name"),
		js.Field("Namespace"),
		js.Field("Scope"),
	).Constructors(
		js.Constructor(reflect.ValueOf(NewIngressClassParametersReference)),
		js.Constructor(reflect.ValueOf(NewIngressClassParametersReferenceWithSpec)),
	)
}