// Code generated by types_generator.go; DO NOT EDIT.

package v1

import (
	"reflect"

	"github.com/ohayocorp/anemos/pkg/js"

	
)

// IPBlock describes a particular CIDR (Ex. "192.168.1.0/24","2001:db8::/64") that is allowed to the pods matched by a NetworkPolicySpec's podSelector. The except entry describes CIDRs that should not be included within this rule.
type IPBlock struct {
	// Cidr is a string representing the IPBlock Valid examples are "192.168.1.0/24" or "2001:db8::/64"
	Cidr string `json:"cidr" yaml:"cidr"`

	// Except is a slice of CIDRs that should not be included within an IPBlock Valid examples are "192.168.1.0/24" or "2001:db8::/64" Except values will be rejected if they are outside the cidr range
	Except *[]string `json:"except,omitempty" yaml:"except,omitempty"`
}

func NewIPBlock() *IPBlock {
	return &IPBlock{}
}

func NewIPBlockWithSpec(spec *IPBlock) *IPBlock {
	
	return spec
}

func RegisterIPBlock(jsRuntime *js.JsRuntime) {
	jsRuntime.Type(reflect.TypeFor[IPBlock]()).JsNamespace("k8s.networking.v1").Fields(
		js.Field("Cidr"),
		js.Field("Except"),
	).Constructors(
		js.Constructor(reflect.ValueOf(NewIPBlock)),
		js.Constructor(reflect.ValueOf(NewIPBlockWithSpec)),
	)
}