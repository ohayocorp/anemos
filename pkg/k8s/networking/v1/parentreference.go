// Code generated by types_generator.go; DO NOT EDIT.

package v1

import (
	"reflect"

	"github.com/ohayocorp/anemos/pkg/js"

	
)

// ParentReference describes a reference to a parent object.
type ParentReference struct {
	// Group is the group of the object being referenced.
	Group *string `json:"group,omitempty" yaml:"group,omitempty"`

	// Name is the name of the object being referenced.
	Name string `json:"name" yaml:"name"`

	// Namespace is the namespace of the object being referenced.
	Namespace *string `json:"namespace,omitempty" yaml:"namespace,omitempty"`

	// Resource is the resource of the object being referenced.
	Resource string `json:"resource" yaml:"resource"`
}

func NewParentReference() *ParentReference {
	return &ParentReference{}
}

func NewParentReferenceWithSpec(spec *ParentReference) *ParentReference {
	
	return spec
}

func RegisterParentReference(jsRuntime *js.JsRuntime) {
	jsRuntime.Type(reflect.TypeFor[ParentReference]()).JsNamespace("k8s.networking.v1").Fields(
		js.Field("Group"),
		js.Field("Name"),
		js.Field("Namespace"),
		js.Field("Resource"),
	).Constructors(
		js.Constructor(reflect.ValueOf(NewParentReference)),
		js.Constructor(reflect.ValueOf(NewParentReferenceWithSpec)),
	)
}