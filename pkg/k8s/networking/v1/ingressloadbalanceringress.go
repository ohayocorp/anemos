// Code generated by types_generator.go; DO NOT EDIT.

package v1

import (
	"reflect"

	"github.com/ohayocorp/anemos/pkg/js"

	
)

// IngressLoadBalancerIngress represents the status of a load-balancer ingress point.
type IngressLoadBalancerIngress struct {
	// Hostname is set for load-balancer ingress points that are DNS based.
	Hostname *string `json:"hostname,omitempty" yaml:"hostname,omitempty"`

	// Ip is set for load-balancer ingress points that are IP based.
	Ip *string `json:"ip,omitempty" yaml:"ip,omitempty"`

	// Ports provides information about the ports exposed by this LoadBalancer.
	Ports []*IngressPortStatus `json:"ports,omitempty" yaml:"ports,omitempty"`
}

func NewIngressLoadBalancerIngress() *IngressLoadBalancerIngress {
	return &IngressLoadBalancerIngress{}
}

func NewIngressLoadBalancerIngressWithSpec(spec *IngressLoadBalancerIngress) *IngressLoadBalancerIngress {
	
	return spec
}

func RegisterIngressLoadBalancerIngress(jsRuntime *js.JsRuntime) {
	jsRuntime.Type(reflect.TypeFor[IngressLoadBalancerIngress]()).JsNamespace("k8s.networking.v1").Fields(
		js.Field("Hostname"),
		js.Field("Ip"),
		js.Field("Ports"),
	).Constructors(
		js.Constructor(reflect.ValueOf(NewIngressLoadBalancerIngress)),
		js.Constructor(reflect.ValueOf(NewIngressLoadBalancerIngressWithSpec)),
	)
}