// Code generated by types_generator.go; DO NOT EDIT.

package v1

import (
	"reflect"

	"github.com/ohayocorp/anemos/pkg/js"

	
)

// ServiceBackendPort is the service port being referenced.
type ServiceBackendPort struct {
	// Name is the name of the port on the Service. This is a mutually exclusive setting with "Number".
	Name *string `json:"name,omitempty" yaml:"name,omitempty"`

	// Number is the numerical port number (e.g. 80) on the Service. This is a mutually exclusive setting with "Name".
	Number *int `json:"number,omitempty" yaml:"number,omitempty"`
}

func NewServiceBackendPort() *ServiceBackendPort {
	return &ServiceBackendPort{}
}

func NewServiceBackendPortWithSpec(spec *ServiceBackendPort) *ServiceBackendPort {
	
	return spec
}

func RegisterServiceBackendPort(jsRuntime *js.JsRuntime) {
	jsRuntime.Type(reflect.TypeFor[ServiceBackendPort]()).JsNamespace("k8s.networking.v1").Fields(
		js.Field("Name"),
		js.Field("Number"),
	).Constructors(
		js.Constructor(reflect.ValueOf(NewServiceBackendPort)),
		js.Constructor(reflect.ValueOf(NewServiceBackendPortWithSpec)),
	)
}