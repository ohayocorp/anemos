// Code generated by types_generator.go; DO NOT EDIT.

package v1

import (
	"reflect"

	"github.com/ohayocorp/anemos/pkg/js"

	corev1 "github.com/ohayocorp/anemos/pkg/k8s/core/v1"
)

// IngressBackend describes all endpoints for a given service and port.
type IngressBackend struct {
	// Resource is an ObjectRef to another Kubernetes resource in the namespace of the Ingress object. If resource is specified, a service.Name and service.Port must not be specified. This is a mutually exclusive setting with "Service".
	Resource *corev1.TypedLocalObjectReference `json:"resource,omitempty" yaml:"resource,omitempty"`

	// Service references a service as a backend. This is a mutually exclusive setting with "Resource".
	Service *IngressServiceBackend `json:"service,omitempty" yaml:"service,omitempty"`
}

func NewIngressBackend() *IngressBackend {
	return &IngressBackend{}
}

func NewIngressBackendWithSpec(spec *IngressBackend) *IngressBackend {
	
	return spec
}

func RegisterIngressBackend(jsRuntime *js.JsRuntime) {
	jsRuntime.Type(reflect.TypeFor[IngressBackend]()).JsNamespace("k8s.networking.v1").Fields(
		js.Field("Resource"),
		js.Field("Service"),
	).Constructors(
		js.Constructor(reflect.ValueOf(NewIngressBackend)),
		js.Constructor(reflect.ValueOf(NewIngressBackendWithSpec)),
	)
}