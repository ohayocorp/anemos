// Code generated by types_generator.go; DO NOT EDIT.

package v1

import (
	"reflect"

	"github.com/ohayocorp/anemos/pkg/js"

	
)

// ServiceCIDRSpec define the CIDRs the user wants to use for allocating ClusterIPs for Services.
type ServiceCIDRSpec struct {
	// CIDRs defines the IP blocks in CIDR notation (e.g. "192.168.0.0/24" or "2001:db8::/64") from which to assign service cluster IPs. Max of two CIDRs is allowed, one of each IP family. This field is immutable.
	Cidrs *[]string `json:"cidrs,omitempty" yaml:"cidrs,omitempty"`
}

func NewServiceCIDRSpec() *ServiceCIDRSpec {
	return &ServiceCIDRSpec{}
}

func NewServiceCIDRSpecWithSpec(spec *ServiceCIDRSpec) *ServiceCIDRSpec {
	
	return spec
}

func RegisterServiceCIDRSpec(jsRuntime *js.JsRuntime) {
	jsRuntime.Type(reflect.TypeFor[ServiceCIDRSpec]()).JsNamespace("k8s.networking.v1").Fields(
		js.Field("Cidrs"),
	).Constructors(
		js.Constructor(reflect.ValueOf(NewServiceCIDRSpec)),
		js.Constructor(reflect.ValueOf(NewServiceCIDRSpecWithSpec)),
	)
}