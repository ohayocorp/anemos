// Code generated by types_generator.go; DO NOT EDIT.

package v1

import (
	"reflect"

	"github.com/ohayocorp/anemos/pkg/js"

	
)

// PodFailurePolicyOnPodConditionsPattern describes a pattern for matching an actual pod condition type.
type PodFailurePolicyOnPodConditionsPattern struct {
	// Specifies the required Pod condition status. To match a pod condition it is required that the specified status equals the pod condition status. Defaults to True.
	Status string `json:"status" yaml:"status"`

	// Specifies the required Pod condition type. To match a pod condition it is required that specified type equals the pod condition type.
	Type string `json:"type" yaml:"type"`
}

func NewPodFailurePolicyOnPodConditionsPattern() *PodFailurePolicyOnPodConditionsPattern {
	return &PodFailurePolicyOnPodConditionsPattern{}
}

func NewPodFailurePolicyOnPodConditionsPatternWithSpec(spec *PodFailurePolicyOnPodConditionsPattern) *PodFailurePolicyOnPodConditionsPattern {
	
	return spec
}

func RegisterPodFailurePolicyOnPodConditionsPattern(jsRuntime *js.JsRuntime) {
	jsRuntime.Type(reflect.TypeFor[PodFailurePolicyOnPodConditionsPattern]()).JsNamespace("k8s.batch.v1").Fields(
		js.Field("Status"),
		js.Field("Type"),
	).Constructors(
		js.Constructor(reflect.ValueOf(NewPodFailurePolicyOnPodConditionsPattern)),
		js.Constructor(reflect.ValueOf(NewPodFailurePolicyOnPodConditionsPatternWithSpec)),
	)
}