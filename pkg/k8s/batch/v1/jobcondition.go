// Code generated by types_generator.go; DO NOT EDIT.

package v1

import (
	"reflect"

	"github.com/ohayocorp/anemos/pkg/js"

	
)

// JobCondition describes current state of a job.
type JobCondition struct {
	// Last time the condition was checked.
	LastProbeTime *string `json:"lastProbeTime,omitempty" yaml:"lastProbeTime,omitempty"`

	// Last time the condition transit from one status to another.
	LastTransitionTime *string `json:"lastTransitionTime,omitempty" yaml:"lastTransitionTime,omitempty"`

	// Human readable message indicating details about last transition.
	Message *string `json:"message,omitempty" yaml:"message,omitempty"`

	// (brief) reason for the condition's last transition.
	Reason *string `json:"reason,omitempty" yaml:"reason,omitempty"`

	// Status of the condition, one of True, False, Unknown.
	Status string `json:"status" yaml:"status"`

	// Type of job condition, Complete or Failed.
	Type string `json:"type" yaml:"type"`
}

func NewJobCondition() *JobCondition {
	return &JobCondition{}
}

func NewJobConditionWithSpec(spec *JobCondition) *JobCondition {
	
	return spec
}

func RegisterJobCondition(jsRuntime *js.JsRuntime) {
	jsRuntime.Type(reflect.TypeFor[JobCondition]()).JsNamespace("k8s.batch.v1").Fields(
		js.Field("LastProbeTime"),
		js.Field("LastTransitionTime"),
		js.Field("Message"),
		js.Field("Reason"),
		js.Field("Status"),
		js.Field("Type"),
	).Constructors(
		js.Constructor(reflect.ValueOf(NewJobCondition)),
		js.Constructor(reflect.ValueOf(NewJobConditionWithSpec)),
	)
}