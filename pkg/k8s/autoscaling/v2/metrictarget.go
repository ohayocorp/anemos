// Code generated by types_generator.go; DO NOT EDIT.

package v2

import (
	"reflect"

	"github.com/ohayocorp/anemos/pkg/js"

	
)

// MetricTarget defines the target value, average value, or average utilization of a specific metric
type MetricTarget struct {
	// AverageUtilization is the target value of the average of the resource metric across all relevant pods, represented as a percentage of the requested value of the resource for the pods. Currently only valid for Resource metric source type
	AverageUtilization *int `json:"averageUtilization,omitempty" yaml:"averageUtilization,omitempty"`

	// AverageValue is the target value of the average of the metric across all relevant pods (as a quantity)
	AverageValue any `json:"averageValue,omitempty" yaml:"averageValue,omitempty"`

	// Type represents whether the metric type is Utilization, Value, or AverageValue
	Type string `json:"type" yaml:"type"`

	// Value is the target value of the metric (as a quantity).
	Value any `json:"value,omitempty" yaml:"value,omitempty"`
}

func NewMetricTarget() *MetricTarget {
	return &MetricTarget{}
}

func NewMetricTargetWithSpec(spec *MetricTarget) *MetricTarget {
	
	return spec
}

func RegisterMetricTarget(jsRuntime *js.JsRuntime) {
	jsRuntime.Type(reflect.TypeFor[MetricTarget]()).JsNamespace("k8s.autoscaling.v2").Fields(
		js.Field("AverageUtilization"),
		js.Field("AverageValue"),
		js.Field("Type"),
		js.Field("Value"),
	).Constructors(
		js.Constructor(reflect.ValueOf(NewMetricTarget)),
		js.Constructor(reflect.ValueOf(NewMetricTargetWithSpec)),
	)
}