// Code generated by types_generator.go; DO NOT EDIT.

package v2

import (
	"reflect"

	"github.com/ohayocorp/anemos/pkg/js"

	
)

// HPAScalingPolicy is a single policy which must hold true for a specified past interval.
type HPAScalingPolicy struct {
	// PeriodSeconds specifies the window of time for which the policy should hold true. PeriodSeconds must be greater than zero and less than or equal to 1800 (30 min).
	PeriodSeconds int `json:"periodSeconds" yaml:"periodSeconds"`

	// Type is used to specify the scaling policy.
	Type string `json:"type" yaml:"type"`

	// Value contains the amount of change which is permitted by the policy. It must be greater than zero
	Value int `json:"value" yaml:"value"`
}

func NewHPAScalingPolicy() *HPAScalingPolicy {
	return &HPAScalingPolicy{}
}

func NewHPAScalingPolicyWithSpec(spec *HPAScalingPolicy) *HPAScalingPolicy {
	
	return spec
}

func RegisterHPAScalingPolicy(jsRuntime *js.JsRuntime) {
	jsRuntime.Type(reflect.TypeFor[HPAScalingPolicy]()).JsNamespace("k8s.autoscaling.v2").Fields(
		js.Field("PeriodSeconds"),
		js.Field("Type"),
		js.Field("Value"),
	).Constructors(
		js.Constructor(reflect.ValueOf(NewHPAScalingPolicy)),
		js.Constructor(reflect.ValueOf(NewHPAScalingPolicyWithSpec)),
	)
}