// Code generated by types_generator.go; DO NOT EDIT.

package v2

import (
	"reflect"

	"github.com/ohayocorp/anemos/pkg/js"

	
)

// ExternalMetricSource indicates how to scale on a metric not associated with any Kubernetes object (for example length of queue in cloud messaging service, or QPS from loadbalancer running outside of cluster).
type ExternalMetricSource struct {
	// Metric identifies the target metric by name and selector
	Metric *MetricIdentifier `json:"metric" yaml:"metric"`

	// Target specifies the target value for the given metric
	Target *MetricTarget `json:"target" yaml:"target"`
}

func NewExternalMetricSource() *ExternalMetricSource {
	return &ExternalMetricSource{}
}

func NewExternalMetricSourceWithSpec(spec *ExternalMetricSource) *ExternalMetricSource {
	
	return spec
}

func RegisterExternalMetricSource(jsRuntime *js.JsRuntime) {
	jsRuntime.Type(reflect.TypeFor[ExternalMetricSource]()).JsNamespace("k8s.autoscaling.v2").Fields(
		js.Field("Metric"),
		js.Field("Target"),
	).Constructors(
		js.Constructor(reflect.ValueOf(NewExternalMetricSource)),
		js.Constructor(reflect.ValueOf(NewExternalMetricSourceWithSpec)),
	)
}