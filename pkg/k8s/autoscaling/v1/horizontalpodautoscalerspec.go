// Code generated by types_generator.go; DO NOT EDIT.

package v1

import (
	"reflect"

	"github.com/ohayocorp/anemos/pkg/js"

	
)

// Specification of a horizontal pod autoscaler.
type HorizontalPodAutoscalerSpec struct {
	// MaxReplicas is the upper limit for the number of pods that can be set by the autoscaler; cannot be smaller than MinReplicas.
	MaxReplicas int `json:"maxReplicas" yaml:"maxReplicas"`

	// MinReplicas is the lower limit for the number of replicas to which the autoscaler can scale down.  It defaults to 1 pod.  minReplicas is allowed to be 0 if the alpha feature gate HPAScaleToZero is enabled and at least one Object or External metric is configured.  Scaling is active as long as at least one metric value is available.
	MinReplicas *int `json:"minReplicas,omitempty" yaml:"minReplicas,omitempty"`

	// Reference to scaled resource; horizontal pod autoscaler will learn the current resource consumption and will set the desired number of pods by using its Scale subresource.
	ScaleTargetRef *CrossVersionObjectReference `json:"scaleTargetRef" yaml:"scaleTargetRef"`

	// TargetCPUUtilizationPercentage is the target average CPU utilization (represented as a percentage of requested CPU) over all the pods; if not specified the default autoscaling policy will be used.
	TargetCPUUtilizationPercentage *int `json:"targetCPUUtilizationPercentage,omitempty" yaml:"targetCPUUtilizationPercentage,omitempty"`
}

func NewHorizontalPodAutoscalerSpec() *HorizontalPodAutoscalerSpec {
	return &HorizontalPodAutoscalerSpec{}
}

func NewHorizontalPodAutoscalerSpecWithSpec(spec *HorizontalPodAutoscalerSpec) *HorizontalPodAutoscalerSpec {
	
	return spec
}

func RegisterHorizontalPodAutoscalerSpec(jsRuntime *js.JsRuntime) {
	jsRuntime.Type(reflect.TypeFor[HorizontalPodAutoscalerSpec]()).JsNamespace("k8s.autoscaling.v1").Fields(
		js.Field("MaxReplicas"),
		js.Field("MinReplicas"),
		js.Field("ScaleTargetRef"),
		js.Field("TargetCPUUtilizationPercentage"),
	).Constructors(
		js.Constructor(reflect.ValueOf(NewHorizontalPodAutoscalerSpec)),
		js.Constructor(reflect.ValueOf(NewHorizontalPodAutoscalerSpecWithSpec)),
	)
}