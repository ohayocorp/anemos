// Code generated by types_generator.go; DO NOT EDIT.

package v1

import (
	"reflect"

	"github.com/ohayocorp/anemos/pkg/js"

	
)

// VolumeError captures an error encountered during a volume operation.
type VolumeError struct {
	// ErrorCode is a numeric gRPC code representing the error encountered during Attach or Detach operations.
	// This is an optional, beta field that requires the MutableCSINodeAllocatableCount feature gate being enabled to be set.
	ErrorCode *int `json:"errorCode,omitempty" yaml:"errorCode,omitempty"`

	// Message represents the error encountered during Attach or Detach operation. This string may be logged, so it should not contain sensitive information.
	Message *string `json:"message,omitempty" yaml:"message,omitempty"`

	// Time represents the time the error was encountered.
	Time *string `json:"time,omitempty" yaml:"time,omitempty"`
}

func NewVolumeError() *VolumeError {
	return &VolumeError{}
}

func NewVolumeErrorWithSpec(spec *VolumeError) *VolumeError {
	
	return spec
}

func RegisterVolumeError(jsRuntime *js.JsRuntime) {
	jsRuntime.Type(reflect.TypeFor[VolumeError]()).JsNamespace("k8s.storage.v1").Fields(
		js.Field("ErrorCode"),
		js.Field("Message"),
		js.Field("Time"),
	).Constructors(
		js.Constructor(reflect.ValueOf(NewVolumeError)),
		js.Constructor(reflect.ValueOf(NewVolumeErrorWithSpec)),
	)
}