// Code generated by types_generator.go; DO NOT EDIT.

package v1

import (
	"reflect"

	"github.com/ohayocorp/anemos/pkg/js"

	
)

// AttachedVolume describes a volume attached to a node
type AttachedVolume struct {
	// DevicePath represents the device path where the volume should be available
	DevicePath string `json:"devicePath" yaml:"devicePath"`

	// Name of the attached volume
	Name string `json:"name" yaml:"name"`
}

func NewAttachedVolume() *AttachedVolume {
	return &AttachedVolume{}
}

func NewAttachedVolumeWithSpec(spec *AttachedVolume) *AttachedVolume {
	
	return spec
}

func RegisterAttachedVolume(jsRuntime *js.JsRuntime) {
	jsRuntime.Type(reflect.TypeFor[AttachedVolume]()).JsNamespace("k8s.core.v1").Fields(
		js.Field("DevicePath"),
		js.Field("Name"),
	).Constructors(
		js.Constructor(reflect.ValueOf(NewAttachedVolume)),
		js.Constructor(reflect.ValueOf(NewAttachedVolumeWithSpec)),
	)
}