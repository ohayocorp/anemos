// Code generated by types_generator.go; DO NOT EDIT.

package v1

import (
	"reflect"

	"github.com/ohayocorp/anemos/pkg/js"

	
)

// SELinuxOptions are the labels to be applied to the container
type SELinuxOptions struct {
	// Level is SELinux level label that applies to the container.
	Level *string `json:"level,omitempty" yaml:"level,omitempty"`

	// Role is a SELinux role label that applies to the container.
	Role *string `json:"role,omitempty" yaml:"role,omitempty"`

	// Type is a SELinux type label that applies to the container.
	Type *string `json:"type,omitempty" yaml:"type,omitempty"`

	// User is a SELinux user label that applies to the container.
	User *string `json:"user,omitempty" yaml:"user,omitempty"`
}

func NewSELinuxOptions() *SELinuxOptions {
	return &SELinuxOptions{}
}

func NewSELinuxOptionsWithSpec(spec *SELinuxOptions) *SELinuxOptions {
	
	return spec
}

func RegisterSELinuxOptions(jsRuntime *js.JsRuntime) {
	jsRuntime.Type(reflect.TypeFor[SELinuxOptions]()).JsNamespace("k8s.core.v1").Fields(
		js.Field("Level"),
		js.Field("Role"),
		js.Field("Type"),
		js.Field("User"),
	).Constructors(
		js.Constructor(reflect.ValueOf(NewSELinuxOptions)),
		js.Constructor(reflect.ValueOf(NewSELinuxOptionsWithSpec)),
	)
}