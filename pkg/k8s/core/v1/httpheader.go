// Code generated by types_generator.go; DO NOT EDIT.

package v1

import (
	"reflect"

	"github.com/ohayocorp/anemos/pkg/js"

	
)

// HTTPHeader describes a custom header to be used in HTTP probes
type HTTPHeader struct {
	// The header field name. This will be canonicalized upon output, so case-variant names will be understood as the same header.
	Name string `json:"name" yaml:"name"`

	// The header field value
	Value string `json:"value" yaml:"value"`
}

func NewHTTPHeader() *HTTPHeader {
	return &HTTPHeader{}
}

func NewHTTPHeaderWithSpec(spec *HTTPHeader) *HTTPHeader {
	
	return spec
}

func RegisterHTTPHeader(jsRuntime *js.JsRuntime) {
	jsRuntime.Type(reflect.TypeFor[HTTPHeader]()).JsNamespace("k8s.core.v1").Fields(
		js.Field("Name"),
		js.Field("Value"),
	).Constructors(
		js.Constructor(reflect.ValueOf(NewHTTPHeader)),
		js.Constructor(reflect.ValueOf(NewHTTPHeaderWithSpec)),
	)
}