// Code generated by types_generator.go; DO NOT EDIT.

package v1

import (
	"reflect"

	"github.com/ohayocorp/anemos/pkg/js"

	
)

// PersistentVolumeStatus is the current status of a persistent volume.
type PersistentVolumeStatus struct {
	// LastPhaseTransitionTime is the time the phase transitioned from one to another and automatically resets to current time everytime a volume phase transitions.
	LastPhaseTransitionTime *string `json:"lastPhaseTransitionTime,omitempty" yaml:"lastPhaseTransitionTime,omitempty"`

	// Message is a human-readable message indicating details about why the volume is in this state.
	Message *string `json:"message,omitempty" yaml:"message,omitempty"`

	// Phase indicates if a volume is available, bound to a claim, or released by a claim. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#phase
	Phase *string `json:"phase,omitempty" yaml:"phase,omitempty"`

	// Reason is a brief CamelCase string that describes any failure and is meant for machine parsing and tidy display in the CLI.
	Reason *string `json:"reason,omitempty" yaml:"reason,omitempty"`
}

func NewPersistentVolumeStatus() *PersistentVolumeStatus {
	return &PersistentVolumeStatus{}
}

func NewPersistentVolumeStatusWithSpec(spec *PersistentVolumeStatus) *PersistentVolumeStatus {
	
	return spec
}

func RegisterPersistentVolumeStatus(jsRuntime *js.JsRuntime) {
	jsRuntime.Type(reflect.TypeFor[PersistentVolumeStatus]()).JsNamespace("k8s.core.v1").Fields(
		js.Field("LastPhaseTransitionTime"),
		js.Field("Message"),
		js.Field("Phase"),
		js.Field("Reason"),
	).Constructors(
		js.Constructor(reflect.ValueOf(NewPersistentVolumeStatus)),
		js.Constructor(reflect.ValueOf(NewPersistentVolumeStatusWithSpec)),
	)
}