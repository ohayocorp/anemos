// Code generated by types_generator.go; DO NOT EDIT.

package v1

import (
	"reflect"

	"github.com/ohayocorp/anemos/pkg/js"

	
)

// NodeSwapStatus represents swap memory information.
type NodeSwapStatus struct {
	// Total amount of swap memory in bytes.
	Capacity *int `json:"capacity,omitempty" yaml:"capacity,omitempty"`
}

func NewNodeSwapStatus() *NodeSwapStatus {
	return &NodeSwapStatus{}
}

func NewNodeSwapStatusWithSpec(spec *NodeSwapStatus) *NodeSwapStatus {
	
	return spec
}

func RegisterNodeSwapStatus(jsRuntime *js.JsRuntime) {
	jsRuntime.Type(reflect.TypeFor[NodeSwapStatus]()).JsNamespace("k8s.core.v1").Fields(
		js.Field("Capacity"),
	).Constructors(
		js.Constructor(reflect.ValueOf(NewNodeSwapStatus)),
		js.Constructor(reflect.ValueOf(NewNodeSwapStatusWithSpec)),
	)
}