// Code generated by types_generator.go; DO NOT EDIT.

package v1

import (
	"reflect"

	"github.com/ohayocorp/anemos/pkg/js"

	
)

// TCPSocketAction describes an action based on opening a socket
type TCPSocketAction struct {
	// Optional: Host name to connect to, defaults to the pod IP.
	Host *string `json:"host,omitempty" yaml:"host,omitempty"`

	// Number or name of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.
	Port any `json:"port" yaml:"port"`
}

func NewTCPSocketAction() *TCPSocketAction {
	return &TCPSocketAction{}
}

func NewTCPSocketActionWithSpec(spec *TCPSocketAction) *TCPSocketAction {
	
	return spec
}

func RegisterTCPSocketAction(jsRuntime *js.JsRuntime) {
	jsRuntime.Type(reflect.TypeFor[TCPSocketAction]()).JsNamespace("k8s.core.v1").Fields(
		js.Field("Host"),
		js.Field("Port"),
	).Constructors(
		js.Constructor(reflect.ValueOf(NewTCPSocketAction)),
		js.Constructor(reflect.ValueOf(NewTCPSocketActionWithSpec)),
	)
}