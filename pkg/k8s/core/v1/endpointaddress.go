// Code generated by types_generator.go; DO NOT EDIT.

package v1

import (
	"reflect"

	"github.com/ohayocorp/anemos/pkg/js"

	
)

// EndpointAddress is a tuple that describes single IP address. Deprecated: This API is deprecated in v1.33+.
type EndpointAddress struct {
	// The Hostname of this endpoint
	Hostname *string `json:"hostname,omitempty" yaml:"hostname,omitempty"`

	// The IP of this endpoint. May not be loopback (127.0.0.0/8 or ::1), link-local (169.254.0.0/16 or fe80::/10), or link-local multicast (224.0.0.0/24 or ff02::/16).
	Ip string `json:"ip" yaml:"ip"`

	// Optional: Node hosting this endpoint. This can be used to determine endpoints local to a node.
	NodeName *string `json:"nodeName,omitempty" yaml:"nodeName,omitempty"`

	// Reference to object providing the endpoint.
	TargetRef *ObjectReference `json:"targetRef,omitempty" yaml:"targetRef,omitempty"`
}

func NewEndpointAddress() *EndpointAddress {
	return &EndpointAddress{}
}

func NewEndpointAddressWithSpec(spec *EndpointAddress) *EndpointAddress {
	
	return spec
}

func RegisterEndpointAddress(jsRuntime *js.JsRuntime) {
	jsRuntime.Type(reflect.TypeFor[EndpointAddress]()).JsNamespace("k8s.core.v1").Fields(
		js.Field("Hostname"),
		js.Field("Ip"),
		js.Field("NodeName"),
		js.Field("TargetRef"),
	).Constructors(
		js.Constructor(reflect.ValueOf(NewEndpointAddress)),
		js.Constructor(reflect.ValueOf(NewEndpointAddressWithSpec)),
	)
}