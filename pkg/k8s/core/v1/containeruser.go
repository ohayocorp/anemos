// Code generated by types_generator.go; DO NOT EDIT.

package v1

import (
	"reflect"

	"github.com/ohayocorp/anemos/pkg/js"

	
)

// ContainerUser represents user identity information
type ContainerUser struct {
	// Linux holds user identity information initially attached to the first process of the containers in Linux. Note that the actual running identity can be changed if the process has enough privilege to do so.
	Linux *LinuxContainerUser `json:"linux,omitempty" yaml:"linux,omitempty"`
}

func NewContainerUser() *ContainerUser {
	return &ContainerUser{}
}

func NewContainerUserWithSpec(spec *ContainerUser) *ContainerUser {
	
	return spec
}

func RegisterContainerUser(jsRuntime *js.JsRuntime) {
	jsRuntime.Type(reflect.TypeFor[ContainerUser]()).JsNamespace("k8s.core.v1").Fields(
		js.Field("Linux"),
	).Constructors(
		js.Constructor(reflect.ValueOf(NewContainerUser)),
		js.Constructor(reflect.ValueOf(NewContainerUserWithSpec)),
	)
}