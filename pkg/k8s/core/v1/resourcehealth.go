// Code generated by types_generator.go; DO NOT EDIT.

package v1

import (
	"reflect"

	"github.com/ohayocorp/anemos/pkg/js"

	
)

// ResourceHealth represents the health of a resource. It has the latest device health information. This is a part of KEP https://kep.k8s.io/4680.
type ResourceHealth struct {
	// Health of the resource. can be one of:
	//  - Healthy: operates as normal
	//  - Unhealthy: reported unhealthy. We consider this a temporary health issue
	//               since we do not have a mechanism today to distinguish
	//               temporary and permanent issues.
	//  - Unknown: The status cannot be determined.
	//             For example, Device Plugin got unregistered and hasn't been re-registered since.
	// In future we may want to introduce the PermanentlyUnhealthy Status.
	Health *string `json:"health,omitempty" yaml:"health,omitempty"`

	// ResourceID is the unique identifier of the resource. See the ResourceID type for more information.
	ResourceID string `json:"resourceID" yaml:"resourceID"`
}

func NewResourceHealth() *ResourceHealth {
	return &ResourceHealth{}
}

func NewResourceHealthWithSpec(spec *ResourceHealth) *ResourceHealth {
	
	return spec
}

func RegisterResourceHealth(jsRuntime *js.JsRuntime) {
	jsRuntime.Type(reflect.TypeFor[ResourceHealth]()).JsNamespace("k8s.core.v1").Fields(
		js.Field("Health"),
		js.Field("ResourceID"),
	).Constructors(
		js.Constructor(reflect.ValueOf(NewResourceHealth)),
		js.Constructor(reflect.ValueOf(NewResourceHealthWithSpec)),
	)
}