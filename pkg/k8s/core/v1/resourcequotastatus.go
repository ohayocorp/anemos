// Code generated by types_generator.go; DO NOT EDIT.

package v1

import (
	"reflect"

	"github.com/ohayocorp/anemos/pkg/js"

	
)

// ResourceQuotaStatus defines the enforced hard limits and observed use.
type ResourceQuotaStatus struct {
	// Hard is the set of enforced hard limits for each named resource. More info: https://kubernetes.io/docs/concepts/policy/resource-quotas/
	Hard map[string]any `json:"hard,omitempty" yaml:"hard,omitempty"`

	// Used is the current observed total usage of the resource in the namespace.
	Used map[string]any `json:"used,omitempty" yaml:"used,omitempty"`
}

func NewResourceQuotaStatus() *ResourceQuotaStatus {
	return &ResourceQuotaStatus{}
}

func NewResourceQuotaStatusWithSpec(spec *ResourceQuotaStatus) *ResourceQuotaStatus {
	
	return spec
}

func RegisterResourceQuotaStatus(jsRuntime *js.JsRuntime) {
	jsRuntime.Type(reflect.TypeFor[ResourceQuotaStatus]()).JsNamespace("k8s.core.v1").Fields(
		js.Field("Hard"),
		js.Field("Used"),
	).Constructors(
		js.Constructor(reflect.ValueOf(NewResourceQuotaStatus)),
		js.Constructor(reflect.ValueOf(NewResourceQuotaStatusWithSpec)),
	)
}