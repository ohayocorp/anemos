// Code generated by types_generator.go; DO NOT EDIT.

package v1

import (
	"reflect"

	"github.com/ohayocorp/anemos/pkg/js"

	apimachinerymetav1 "github.com/ohayocorp/anemos/pkg/k8s/apimachinery/meta/v1"
)

// PodTemplateSpec describes the data a pod should have when created from a template
type PodTemplateSpec struct {
	// Standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata
	Metadata *apimachinerymetav1.ObjectMeta `json:"metadata,omitempty" yaml:"metadata,omitempty"`

	// Specification of the desired behavior of the pod. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#spec-and-status
	Spec *PodSpec `json:"spec,omitempty" yaml:"spec,omitempty"`
}

func NewPodTemplateSpec() *PodTemplateSpec {
	return &PodTemplateSpec{}
}

func NewPodTemplateSpecWithSpec(spec *PodTemplateSpec) *PodTemplateSpec {
	
	return spec
}

func RegisterPodTemplateSpec(jsRuntime *js.JsRuntime) {
	jsRuntime.Type(reflect.TypeFor[PodTemplateSpec]()).JsNamespace("k8s.core.v1").Fields(
		js.Field("Metadata"),
		js.Field("Spec"),
	).Constructors(
		js.Constructor(reflect.ValueOf(NewPodTemplateSpec)),
		js.Constructor(reflect.ValueOf(NewPodTemplateSpecWithSpec)),
	)
}