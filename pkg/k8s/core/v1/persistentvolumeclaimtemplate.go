// Code generated by types_generator.go; DO NOT EDIT.

package v1

import (
	"reflect"

	"github.com/ohayocorp/anemos/pkg/js"

	apimachinerymetav1 "github.com/ohayocorp/anemos/pkg/k8s/apimachinery/meta/v1"
)

// PersistentVolumeClaimTemplate is used to produce PersistentVolumeClaim objects as part of an EphemeralVolumeSource.
type PersistentVolumeClaimTemplate struct {
	// May contain labels and annotations that will be copied into the PVC when creating it. No other fields are allowed and will be rejected during validation.
	Metadata *apimachinerymetav1.ObjectMeta `json:"metadata,omitempty" yaml:"metadata,omitempty"`

	// The specification for the PersistentVolumeClaim. The entire content is copied unchanged into the PVC that gets created from this template. The same fields as in a PersistentVolumeClaim are also valid here.
	Spec *PersistentVolumeClaimSpec `json:"spec" yaml:"spec"`
}

func NewPersistentVolumeClaimTemplate() *PersistentVolumeClaimTemplate {
	return &PersistentVolumeClaimTemplate{}
}

func NewPersistentVolumeClaimTemplateWithSpec(spec *PersistentVolumeClaimTemplate) *PersistentVolumeClaimTemplate {
	
	return spec
}

func RegisterPersistentVolumeClaimTemplate(jsRuntime *js.JsRuntime) {
	jsRuntime.Type(reflect.TypeFor[PersistentVolumeClaimTemplate]()).JsNamespace("k8s.core.v1").Fields(
		js.Field("Metadata"),
		js.Field("Spec"),
	).Constructors(
		js.Constructor(reflect.ValueOf(NewPersistentVolumeClaimTemplate)),
		js.Constructor(reflect.ValueOf(NewPersistentVolumeClaimTemplateWithSpec)),
	)
}