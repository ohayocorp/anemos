// Code generated by types_generator.go; DO NOT EDIT.

package v1

import (
	"reflect"

	"github.com/ohayocorp/anemos/pkg/js"

	apimachinerymetav1 "github.com/ohayocorp/anemos/pkg/k8s/apimachinery/meta/v1"
)

// ServiceStatus represents the current status of a service.
type ServiceStatus struct {
	// Current service state
	Conditions []*apimachinerymetav1.Condition `json:"conditions,omitempty" yaml:"conditions,omitempty"`

	// LoadBalancer contains the current status of the load-balancer, if one is present.
	LoadBalancer *LoadBalancerStatus `json:"loadBalancer,omitempty" yaml:"loadBalancer,omitempty"`
}

func NewServiceStatus() *ServiceStatus {
	return &ServiceStatus{}
}

func NewServiceStatusWithSpec(spec *ServiceStatus) *ServiceStatus {
	
	return spec
}

func RegisterServiceStatus(jsRuntime *js.JsRuntime) {
	jsRuntime.Type(reflect.TypeFor[ServiceStatus]()).JsNamespace("k8s.core.v1").Fields(
		js.Field("Conditions"),
		js.Field("LoadBalancer"),
	).Constructors(
		js.Constructor(reflect.ValueOf(NewServiceStatus)),
		js.Constructor(reflect.ValueOf(NewServiceStatusWithSpec)),
	)
}