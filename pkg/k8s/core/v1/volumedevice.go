// Code generated by types_generator.go; DO NOT EDIT.

package v1

import (
	"reflect"

	"github.com/ohayocorp/anemos/pkg/js"

	
)

// VolumeDevice describes a mapping of a raw block device within a container.
type VolumeDevice struct {
	// DevicePath is the path inside of the container that the device will be mapped to.
	DevicePath string `json:"devicePath" yaml:"devicePath"`

	// Name must match the name of a persistentVolumeClaim in the pod
	Name string `json:"name" yaml:"name"`
}

func NewVolumeDevice() *VolumeDevice {
	return &VolumeDevice{}
}

func NewVolumeDeviceWithSpec(spec *VolumeDevice) *VolumeDevice {
	
	return spec
}

func RegisterVolumeDevice(jsRuntime *js.JsRuntime) {
	jsRuntime.Type(reflect.TypeFor[VolumeDevice]()).JsNamespace("k8s.core.v1").Fields(
		js.Field("DevicePath"),
		js.Field("Name"),
	).Constructors(
		js.Constructor(reflect.ValueOf(NewVolumeDevice)),
		js.Constructor(reflect.ValueOf(NewVolumeDeviceWithSpec)),
	)
}