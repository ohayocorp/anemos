// Code generated by types_generator.go; DO NOT EDIT.

package v1

import (
	"reflect"

	"github.com/ohayocorp/anemos/pkg/js"

	
)

// PodExtendedResourceClaimStatus is stored in the PodStatus for the extended resource requests backed by DRA. It stores the generated name for the corresponding special ResourceClaim created by the scheduler.
type PodExtendedResourceClaimStatus struct {
	// RequestMappings identifies the mapping of <container, extended resource backed by DRA> to  device request in the generated ResourceClaim.
	RequestMappings []*ContainerExtendedResourceRequest `json:"requestMappings" yaml:"requestMappings"`

	// ResourceClaimName is the name of the ResourceClaim that was generated for the Pod in the namespace of the Pod.
	ResourceClaimName string `json:"resourceClaimName" yaml:"resourceClaimName"`
}

func NewPodExtendedResourceClaimStatus() *PodExtendedResourceClaimStatus {
	return &PodExtendedResourceClaimStatus{}
}

func NewPodExtendedResourceClaimStatusWithSpec(spec *PodExtendedResourceClaimStatus) *PodExtendedResourceClaimStatus {
	
	return spec
}

func RegisterPodExtendedResourceClaimStatus(jsRuntime *js.JsRuntime) {
	jsRuntime.Type(reflect.TypeFor[PodExtendedResourceClaimStatus]()).JsNamespace("k8s.core.v1").Fields(
		js.Field("RequestMappings"),
		js.Field("ResourceClaimName"),
	).Constructors(
		js.Constructor(reflect.ValueOf(NewPodExtendedResourceClaimStatus)),
		js.Constructor(reflect.ValueOf(NewPodExtendedResourceClaimStatusWithSpec)),
	)
}