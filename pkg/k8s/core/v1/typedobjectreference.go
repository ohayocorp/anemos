// Code generated by types_generator.go; DO NOT EDIT.

package v1

import (
	"reflect"

	"github.com/ohayocorp/anemos/pkg/js"

	
)

// TypedObjectReference contains enough information to let you locate the typed referenced object
type TypedObjectReference struct {
	// APIGroup is the group for the resource being referenced. If APIGroup is not specified, the specified Kind must be in the core API group. For any other third-party types, APIGroup is required.
	ApiGroup *string `json:"apiGroup,omitempty" yaml:"apiGroup,omitempty"`

	// Kind is the type of resource being referenced
	Kind string `json:"kind" yaml:"kind"`

	// Name is the name of resource being referenced
	Name string `json:"name" yaml:"name"`

	// Namespace is the namespace of resource being referenced Note that when a namespace is specified, a gateway.networking.k8s.io/ReferenceGrant object is required in the referent namespace to allow that namespace's owner to accept the reference. See the ReferenceGrant documentation for details. (Alpha) This field requires the CrossNamespaceVolumeDataSource feature gate to be enabled.
	Namespace *string `json:"namespace,omitempty" yaml:"namespace,omitempty"`
}

func NewTypedObjectReference() *TypedObjectReference {
	return &TypedObjectReference{}
}

func NewTypedObjectReferenceWithSpec(spec *TypedObjectReference) *TypedObjectReference {
	
	return spec
}

func RegisterTypedObjectReference(jsRuntime *js.JsRuntime) {
	jsRuntime.Type(reflect.TypeFor[TypedObjectReference]()).JsNamespace("k8s.core.v1").Fields(
		js.Field("ApiGroup"),
		js.Field("Kind"),
		js.Field("Name"),
		js.Field("Namespace"),
	).Constructors(
		js.Constructor(reflect.ValueOf(NewTypedObjectReference)),
		js.Constructor(reflect.ValueOf(NewTypedObjectReferenceWithSpec)),
	)
}