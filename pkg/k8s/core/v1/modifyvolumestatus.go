// Code generated by types_generator.go; DO NOT EDIT.

package v1

import (
	"reflect"

	"github.com/ohayocorp/anemos/pkg/js"

	
)

// ModifyVolumeStatus represents the status object of ControllerModifyVolume operation
type ModifyVolumeStatus struct {
	// Status is the status of the ControllerModifyVolume operation. It can be in any of following states:
	//  - Pending
	//    Pending indicates that the PersistentVolumeClaim cannot be modified due to unmet requirements, such as
	//    the specified VolumeAttributesClass not existing.
	//  - InProgress
	//    InProgress indicates that the volume is being modified.
	//  - Infeasible
	//   Infeasible indicates that the request has been rejected as invalid by the CSI driver. To
	// 	  resolve the error, a valid VolumeAttributesClass needs to be specified.
	// Note: New statuses can be added in the future. Consumers should check for unknown statuses and fail appropriately.
	Status string `json:"status" yaml:"status"`

	// TargetVolumeAttributesClassName is the name of the VolumeAttributesClass the PVC currently being reconciled
	TargetVolumeAttributesClassName *string `json:"targetVolumeAttributesClassName,omitempty" yaml:"targetVolumeAttributesClassName,omitempty"`
}

func NewModifyVolumeStatus() *ModifyVolumeStatus {
	return &ModifyVolumeStatus{}
}

func NewModifyVolumeStatusWithSpec(spec *ModifyVolumeStatus) *ModifyVolumeStatus {
	
	return spec
}

func RegisterModifyVolumeStatus(jsRuntime *js.JsRuntime) {
	jsRuntime.Type(reflect.TypeFor[ModifyVolumeStatus]()).JsNamespace("k8s.core.v1").Fields(
		js.Field("Status"),
		js.Field("TargetVolumeAttributesClassName"),
	).Constructors(
		js.Constructor(reflect.ValueOf(NewModifyVolumeStatus)),
		js.Constructor(reflect.ValueOf(NewModifyVolumeStatusWithSpec)),
	)
}