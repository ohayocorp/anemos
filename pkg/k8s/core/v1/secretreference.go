// Code generated by types_generator.go; DO NOT EDIT.

package v1

import (
	"reflect"

	"github.com/ohayocorp/anemos/pkg/js"

	
)

// SecretReference represents a Secret Reference. It has enough information to retrieve secret in any namespace
type SecretReference struct {
	// Name is unique within a namespace to reference a secret resource.
	Name *string `json:"name,omitempty" yaml:"name,omitempty"`

	// Namespace defines the space within which the secret name must be unique.
	Namespace *string `json:"namespace,omitempty" yaml:"namespace,omitempty"`
}

func NewSecretReference() *SecretReference {
	return &SecretReference{}
}

func NewSecretReferenceWithSpec(spec *SecretReference) *SecretReference {
	
	return spec
}

func RegisterSecretReference(jsRuntime *js.JsRuntime) {
	jsRuntime.Type(reflect.TypeFor[SecretReference]()).JsNamespace("k8s.core.v1").Fields(
		js.Field("Name"),
		js.Field("Namespace"),
	).Constructors(
		js.Constructor(reflect.ValueOf(NewSecretReference)),
		js.Constructor(reflect.ValueOf(NewSecretReferenceWithSpec)),
	)
}