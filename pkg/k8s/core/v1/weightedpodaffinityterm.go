// Code generated by types_generator.go; DO NOT EDIT.

package v1

import (
	"reflect"

	"github.com/ohayocorp/anemos/pkg/js"

	
)

// The weights of all of the matched WeightedPodAffinityTerm fields are added per-node to find the most preferred node(s)
type WeightedPodAffinityTerm struct {
	// Required. A pod affinity term, associated with the corresponding weight.
	PodAffinityTerm *PodAffinityTerm `json:"podAffinityTerm" yaml:"podAffinityTerm"`

	// Weight associated with matching the corresponding podAffinityTerm, in the range 1-100.
	Weight int `json:"weight" yaml:"weight"`
}

func NewWeightedPodAffinityTerm() *WeightedPodAffinityTerm {
	return &WeightedPodAffinityTerm{}
}

func NewWeightedPodAffinityTermWithSpec(spec *WeightedPodAffinityTerm) *WeightedPodAffinityTerm {
	
	return spec
}

func RegisterWeightedPodAffinityTerm(jsRuntime *js.JsRuntime) {
	jsRuntime.Type(reflect.TypeFor[WeightedPodAffinityTerm]()).JsNamespace("k8s.core.v1").Fields(
		js.Field("PodAffinityTerm"),
		js.Field("Weight"),
	).Constructors(
		js.Constructor(reflect.ValueOf(NewWeightedPodAffinityTerm)),
		js.Constructor(reflect.ValueOf(NewWeightedPodAffinityTermWithSpec)),
	)
}