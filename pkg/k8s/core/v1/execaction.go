// Code generated by types_generator.go; DO NOT EDIT.

package v1

import (
	"reflect"

	"github.com/ohayocorp/anemos/pkg/js"

	
)

// ExecAction describes a "run in container" action.
type ExecAction struct {
	// Command is the command line to execute inside the container, the working directory for the command  is root ('/') in the container's filesystem. The command is simply exec'd, it is not run inside a shell, so traditional shell instructions ('|', etc) won't work. To use a shell, you need to explicitly call out to that shell. Exit status of 0 is treated as live/healthy and non-zero is unhealthy.
	Command *[]string `json:"command,omitempty" yaml:"command,omitempty"`
}

func NewExecAction() *ExecAction {
	return &ExecAction{}
}

func NewExecActionWithSpec(spec *ExecAction) *ExecAction {
	
	return spec
}

func RegisterExecAction(jsRuntime *js.JsRuntime) {
	jsRuntime.Type(reflect.TypeFor[ExecAction]()).JsNamespace("k8s.core.v1").Fields(
		js.Field("Command"),
	).Constructors(
		js.Constructor(reflect.ValueOf(NewExecAction)),
		js.Constructor(reflect.ValueOf(NewExecActionWithSpec)),
	)
}