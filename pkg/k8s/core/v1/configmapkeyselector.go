// Code generated by types_generator.go; DO NOT EDIT.

package v1

import (
	"reflect"

	"github.com/ohayocorp/anemos/pkg/js"

	
)

// Selects a key from a ConfigMap.
type ConfigMapKeySelector struct {
	// The key to select.
	Key string `json:"key" yaml:"key"`

	// Name of the referent. This field is effectively required, but due to backwards compatibility is allowed to be empty. Instances of this type with an empty value here are almost certainly wrong. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
	Name *string `json:"name,omitempty" yaml:"name,omitempty"`

	// Specify whether the ConfigMap or its key must be defined
	Optional *bool `json:"optional,omitempty" yaml:"optional,omitempty"`
}

func NewConfigMapKeySelector() *ConfigMapKeySelector {
	return &ConfigMapKeySelector{}
}

func NewConfigMapKeySelectorWithSpec(spec *ConfigMapKeySelector) *ConfigMapKeySelector {
	
	return spec
}

func RegisterConfigMapKeySelector(jsRuntime *js.JsRuntime) {
	jsRuntime.Type(reflect.TypeFor[ConfigMapKeySelector]()).JsNamespace("k8s.core.v1").Fields(
		js.Field("Key"),
		js.Field("Name"),
		js.Field("Optional"),
	).Constructors(
		js.Constructor(reflect.ValueOf(NewConfigMapKeySelector)),
		js.Constructor(reflect.ValueOf(NewConfigMapKeySelectorWithSpec)),
	)
}