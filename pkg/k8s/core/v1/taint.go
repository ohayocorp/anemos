// Code generated by types_generator.go; DO NOT EDIT.

package v1

import (
	"reflect"

	"github.com/ohayocorp/anemos/pkg/js"

	
)

// The node this Taint is attached to has the "effect" on any pod that does not tolerate the Taint.
type Taint struct {
	// Required. The effect of the taint on pods that do not tolerate the taint. Valid effects are NoSchedule, PreferNoSchedule and NoExecute.
	Effect string `json:"effect" yaml:"effect"`

	// Required. The taint key to be applied to a node.
	Key string `json:"key" yaml:"key"`

	// TimeAdded represents the time at which the taint was added.
	TimeAdded *string `json:"timeAdded,omitempty" yaml:"timeAdded,omitempty"`

	// The taint value corresponding to the taint key.
	Value *string `json:"value,omitempty" yaml:"value,omitempty"`
}

func NewTaint() *Taint {
	return &Taint{}
}

func NewTaintWithSpec(spec *Taint) *Taint {
	
	return spec
}

func RegisterTaint(jsRuntime *js.JsRuntime) {
	jsRuntime.Type(reflect.TypeFor[Taint]()).JsNamespace("k8s.core.v1").Fields(
		js.Field("Effect"),
		js.Field("Key"),
		js.Field("TimeAdded"),
		js.Field("Value"),
	).Constructors(
		js.Constructor(reflect.ValueOf(NewTaint)),
		js.Constructor(reflect.ValueOf(NewTaintWithSpec)),
	)
}