// Code generated by types_generator.go; DO NOT EDIT.

package v1

import (
	"reflect"

	"github.com/ohayocorp/anemos/pkg/js"

	
)

// ContainerState holds a possible state of container. Only one of its members may be specified. If none of them is specified, the default one is ContainerStateWaiting.
type ContainerState struct {
	// Details about a running container
	Running *ContainerStateRunning `json:"running,omitempty" yaml:"running,omitempty"`

	// Details about a terminated container
	Terminated *ContainerStateTerminated `json:"terminated,omitempty" yaml:"terminated,omitempty"`

	// Details about a waiting container
	Waiting *ContainerStateWaiting `json:"waiting,omitempty" yaml:"waiting,omitempty"`
}

func NewContainerState() *ContainerState {
	return &ContainerState{}
}

func NewContainerStateWithSpec(spec *ContainerState) *ContainerState {
	
	return spec
}

func RegisterContainerState(jsRuntime *js.JsRuntime) {
	jsRuntime.Type(reflect.TypeFor[ContainerState]()).JsNamespace("k8s.core.v1").Fields(
		js.Field("Running"),
		js.Field("Terminated"),
		js.Field("Waiting"),
	).Constructors(
		js.Constructor(reflect.ValueOf(NewContainerState)),
		js.Constructor(reflect.ValueOf(NewContainerStateWithSpec)),
	)
}