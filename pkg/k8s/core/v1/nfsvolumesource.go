// Code generated by types_generator.go; DO NOT EDIT.

package v1

import (
	"reflect"

	"github.com/ohayocorp/anemos/pkg/js"

	
)

// Represents an NFS mount that lasts the lifetime of a pod. NFS volumes do not support ownership management or SELinux relabeling.
type NFSVolumeSource struct {
	// Path that is exported by the NFS server. More info: https://kubernetes.io/docs/concepts/storage/volumes#nfs
	Path string `json:"path" yaml:"path"`

	// ReadOnly here will force the NFS export to be mounted with read-only permissions. Defaults to false. More info: https://kubernetes.io/docs/concepts/storage/volumes#nfs
	ReadOnly *bool `json:"readOnly,omitempty" yaml:"readOnly,omitempty"`

	// Server is the hostname or IP address of the NFS server. More info: https://kubernetes.io/docs/concepts/storage/volumes#nfs
	Server string `json:"server" yaml:"server"`
}

func NewNFSVolumeSource() *NFSVolumeSource {
	return &NFSVolumeSource{}
}

func NewNFSVolumeSourceWithSpec(spec *NFSVolumeSource) *NFSVolumeSource {
	
	return spec
}

func RegisterNFSVolumeSource(jsRuntime *js.JsRuntime) {
	jsRuntime.Type(reflect.TypeFor[NFSVolumeSource]()).JsNamespace("k8s.core.v1").Fields(
		js.Field("Path"),
		js.Field("ReadOnly"),
		js.Field("Server"),
	).Constructors(
		js.Constructor(reflect.ValueOf(NewNFSVolumeSource)),
		js.Constructor(reflect.ValueOf(NewNFSVolumeSourceWithSpec)),
	)
}