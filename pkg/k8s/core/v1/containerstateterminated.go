// Code generated by types_generator.go; DO NOT EDIT.

package v1

import (
	"reflect"

	"github.com/ohayocorp/anemos/pkg/js"

	
)

// ContainerStateTerminated is a terminated state of a container.
type ContainerStateTerminated struct {
	// Container's ID in the format '<type>://<container_id>'
	ContainerID *string `json:"containerID,omitempty" yaml:"containerID,omitempty"`

	// Exit status from the last termination of the container
	ExitCode int `json:"exitCode" yaml:"exitCode"`

	// Time at which the container last terminated
	FinishedAt *string `json:"finishedAt,omitempty" yaml:"finishedAt,omitempty"`

	// Message regarding the last termination of the container
	Message *string `json:"message,omitempty" yaml:"message,omitempty"`

	// (brief) reason from the last termination of the container
	Reason *string `json:"reason,omitempty" yaml:"reason,omitempty"`

	// Signal from the last termination of the container
	Signal *int `json:"signal,omitempty" yaml:"signal,omitempty"`

	// Time at which previous execution of the container started
	StartedAt *string `json:"startedAt,omitempty" yaml:"startedAt,omitempty"`
}

func NewContainerStateTerminated() *ContainerStateTerminated {
	return &ContainerStateTerminated{}
}

func NewContainerStateTerminatedWithSpec(spec *ContainerStateTerminated) *ContainerStateTerminated {
	
	return spec
}

func RegisterContainerStateTerminated(jsRuntime *js.JsRuntime) {
	jsRuntime.Type(reflect.TypeFor[ContainerStateTerminated]()).JsNamespace("k8s.core.v1").Fields(
		js.Field("ContainerID"),
		js.Field("ExitCode"),
		js.Field("FinishedAt"),
		js.Field("Message"),
		js.Field("Reason"),
		js.Field("Signal"),
		js.Field("StartedAt"),
	).Constructors(
		js.Constructor(reflect.ValueOf(NewContainerStateTerminated)),
		js.Constructor(reflect.ValueOf(NewContainerStateTerminatedWithSpec)),
	)
}