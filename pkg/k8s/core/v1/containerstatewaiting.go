// Code generated by types_generator.go; DO NOT EDIT.

package v1

import (
	"reflect"

	"github.com/ohayocorp/anemos/pkg/js"

	
)

// ContainerStateWaiting is a waiting state of a container.
type ContainerStateWaiting struct {
	// Message regarding why the container is not yet running.
	Message *string `json:"message,omitempty" yaml:"message,omitempty"`

	// (brief) reason the container is not yet running.
	Reason *string `json:"reason,omitempty" yaml:"reason,omitempty"`
}

func NewContainerStateWaiting() *ContainerStateWaiting {
	return &ContainerStateWaiting{}
}

func NewContainerStateWaitingWithSpec(spec *ContainerStateWaiting) *ContainerStateWaiting {
	
	return spec
}

func RegisterContainerStateWaiting(jsRuntime *js.JsRuntime) {
	jsRuntime.Type(reflect.TypeFor[ContainerStateWaiting]()).JsNamespace("k8s.core.v1").Fields(
		js.Field("Message"),
		js.Field("Reason"),
	).Constructors(
		js.Constructor(reflect.ValueOf(NewContainerStateWaiting)),
		js.Constructor(reflect.ValueOf(NewContainerStateWaitingWithSpec)),
	)
}