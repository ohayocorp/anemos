// Code generated by types_generator.go; DO NOT EDIT.

package v1

import (
	"reflect"

	"github.com/ohayocorp/anemos/pkg/js"

	
)

// ContainerRestartRule describes how a container exit is handled.
type ContainerRestartRule struct {
	// Specifies the action taken on a container exit if the requirements are satisfied. The only possible value is "Restart" to restart the container.
	Action string `json:"action" yaml:"action"`

	// Represents the exit codes to check on container exits.
	ExitCodes *ContainerRestartRuleOnExitCodes `json:"exitCodes,omitempty" yaml:"exitCodes,omitempty"`
}

func NewContainerRestartRule() *ContainerRestartRule {
	return &ContainerRestartRule{}
}

func NewContainerRestartRuleWithSpec(spec *ContainerRestartRule) *ContainerRestartRule {
	
	return spec
}

func RegisterContainerRestartRule(jsRuntime *js.JsRuntime) {
	jsRuntime.Type(reflect.TypeFor[ContainerRestartRule]()).JsNamespace("k8s.core.v1").Fields(
		js.Field("Action"),
		js.Field("ExitCodes"),
	).Constructors(
		js.Constructor(reflect.ValueOf(NewContainerRestartRule)),
		js.Constructor(reflect.ValueOf(NewContainerRestartRuleWithSpec)),
	)
}