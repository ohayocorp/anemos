// Code generated by types_generator.go; DO NOT EDIT.

package v1

import (
	"reflect"

	"github.com/ohayocorp/anemos/pkg/js"

	
)

// LinuxContainerUser represents user identity information in Linux containers
type LinuxContainerUser struct {
	// GID is the primary gid initially attached to the first process in the container
	Gid int `json:"gid" yaml:"gid"`

	// SupplementalGroups are the supplemental groups initially attached to the first process in the container
	SupplementalGroups *[]int `json:"supplementalGroups,omitempty" yaml:"supplementalGroups,omitempty"`

	// UID is the primary uid initially attached to the first process in the container
	Uid int `json:"uid" yaml:"uid"`
}

func NewLinuxContainerUser() *LinuxContainerUser {
	return &LinuxContainerUser{}
}

func NewLinuxContainerUserWithSpec(spec *LinuxContainerUser) *LinuxContainerUser {
	
	return spec
}

func RegisterLinuxContainerUser(jsRuntime *js.JsRuntime) {
	jsRuntime.Type(reflect.TypeFor[LinuxContainerUser]()).JsNamespace("k8s.core.v1").Fields(
		js.Field("Gid"),
		js.Field("SupplementalGroups"),
		js.Field("Uid"),
	).Constructors(
		js.Constructor(reflect.ValueOf(NewLinuxContainerUser)),
		js.Constructor(reflect.ValueOf(NewLinuxContainerUserWithSpec)),
	)
}