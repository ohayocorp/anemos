// Code generated by types_generator.go; DO NOT EDIT.

package v1

import (
	"reflect"

	"github.com/ohayocorp/anemos/pkg/js"

	
)

// NodeAddress contains information for the node's address.
type NodeAddress struct {
	// The node address.
	Address string `json:"address" yaml:"address"`

	// Node address type, one of Hostname, ExternalIP or InternalIP.
	Type string `json:"type" yaml:"type"`
}

func NewNodeAddress() *NodeAddress {
	return &NodeAddress{}
}

func NewNodeAddressWithSpec(spec *NodeAddress) *NodeAddress {
	
	return spec
}

func RegisterNodeAddress(jsRuntime *js.JsRuntime) {
	jsRuntime.Type(reflect.TypeFor[NodeAddress]()).JsNamespace("k8s.core.v1").Fields(
		js.Field("Address"),
		js.Field("Type"),
	).Constructors(
		js.Constructor(reflect.ValueOf(NewNodeAddress)),
		js.Constructor(reflect.ValueOf(NewNodeAddressWithSpec)),
	)
}