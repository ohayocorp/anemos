// Code generated by types_generator.go; DO NOT EDIT.

package v1

import (
	"reflect"

	"github.com/ohayocorp/anemos/pkg/js"

	
)

// Represents a vSphere volume resource.
type VsphereVirtualDiskVolumeSource struct {
	// FsType is filesystem type to mount. Must be a filesystem type supported by the host operating system. Ex. "ext4", "xfs", "ntfs". Implicitly inferred to be "ext4" if unspecified.
	FsType *string `json:"fsType,omitempty" yaml:"fsType,omitempty"`

	// StoragePolicyID is the storage Policy Based Management (SPBM) profile ID associated with the StoragePolicyName.
	StoragePolicyID *string `json:"storagePolicyID,omitempty" yaml:"storagePolicyID,omitempty"`

	// StoragePolicyName is the storage Policy Based Management (SPBM) profile name.
	StoragePolicyName *string `json:"storagePolicyName,omitempty" yaml:"storagePolicyName,omitempty"`

	// VolumePath is the path that identifies vSphere volume vmdk
	VolumePath string `json:"volumePath" yaml:"volumePath"`
}

func NewVsphereVirtualDiskVolumeSource() *VsphereVirtualDiskVolumeSource {
	return &VsphereVirtualDiskVolumeSource{}
}

func NewVsphereVirtualDiskVolumeSourceWithSpec(spec *VsphereVirtualDiskVolumeSource) *VsphereVirtualDiskVolumeSource {
	
	return spec
}

func RegisterVsphereVirtualDiskVolumeSource(jsRuntime *js.JsRuntime) {
	jsRuntime.Type(reflect.TypeFor[VsphereVirtualDiskVolumeSource]()).JsNamespace("k8s.core.v1").Fields(
		js.Field("FsType"),
		js.Field("StoragePolicyID"),
		js.Field("StoragePolicyName"),
		js.Field("VolumePath"),
	).Constructors(
		js.Constructor(reflect.ValueOf(NewVsphereVirtualDiskVolumeSource)),
		js.Constructor(reflect.ValueOf(NewVsphereVirtualDiskVolumeSourceWithSpec)),
	)
}