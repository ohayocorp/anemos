// Code generated by types_generator.go; DO NOT EDIT.

package v1

import (
	"reflect"

	"github.com/ohayocorp/anemos/pkg/js"

	
)

// LoadBalancerStatus represents the status of a load-balancer.
type LoadBalancerStatus struct {
	// Ingress is a list containing ingress points for the load-balancer. Traffic intended for the service should be sent to these ingress points.
	Ingress []*LoadBalancerIngress `json:"ingress,omitempty" yaml:"ingress,omitempty"`
}

func NewLoadBalancerStatus() *LoadBalancerStatus {
	return &LoadBalancerStatus{}
}

func NewLoadBalancerStatusWithSpec(spec *LoadBalancerStatus) *LoadBalancerStatus {
	
	return spec
}

func RegisterLoadBalancerStatus(jsRuntime *js.JsRuntime) {
	jsRuntime.Type(reflect.TypeFor[LoadBalancerStatus]()).JsNamespace("k8s.core.v1").Fields(
		js.Field("Ingress"),
	).Constructors(
		js.Constructor(reflect.ValueOf(NewLoadBalancerStatus)),
		js.Constructor(reflect.ValueOf(NewLoadBalancerStatusWithSpec)),
	)
}