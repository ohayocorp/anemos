// Code generated by types_generator.go; DO NOT EDIT.

package v1

import (
	"reflect"

	"github.com/ohayocorp/anemos/pkg/js"

	
)

// ResourceClaim references one entry in PodSpec.ResourceClaims.
type ResourceClaim struct {
	// Name must match the name of one entry in pod.spec.resourceClaims of the Pod where this field is used. It makes that resource available inside a container.
	Name string `json:"name" yaml:"name"`

	// Request is the name chosen for a request in the referenced claim. If empty, everything from the claim is made available, otherwise only the result of this request.
	Request *string `json:"request,omitempty" yaml:"request,omitempty"`
}

func NewResourceClaim() *ResourceClaim {
	return &ResourceClaim{}
}

func NewResourceClaimWithSpec(spec *ResourceClaim) *ResourceClaim {
	
	return spec
}

func RegisterResourceClaim(jsRuntime *js.JsRuntime) {
	jsRuntime.Type(reflect.TypeFor[ResourceClaim]()).JsNamespace("k8s.core.v1").Fields(
		js.Field("Name"),
		js.Field("Request"),
	).Constructors(
		js.Constructor(reflect.ValueOf(NewResourceClaim)),
		js.Constructor(reflect.ValueOf(NewResourceClaimWithSpec)),
	)
}