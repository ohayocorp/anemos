// Code generated by types_generator.go; DO NOT EDIT.

package v1

import (
	"reflect"

	"github.com/ohayocorp/anemos/pkg/js"

	
)

// A scope selector represents the AND of the selectors represented by the scoped-resource selector requirements.
type ScopeSelector struct {
	// A list of scope selector requirements by scope of the resources.
	MatchExpressions []*ScopedResourceSelectorRequirement `json:"matchExpressions,omitempty" yaml:"matchExpressions,omitempty"`
}

func NewScopeSelector() *ScopeSelector {
	return &ScopeSelector{}
}

func NewScopeSelectorWithSpec(spec *ScopeSelector) *ScopeSelector {
	
	return spec
}

func RegisterScopeSelector(jsRuntime *js.JsRuntime) {
	jsRuntime.Type(reflect.TypeFor[ScopeSelector]()).JsNamespace("k8s.core.v1").Fields(
		js.Field("MatchExpressions"),
	).Constructors(
		js.Constructor(reflect.ValueOf(NewScopeSelector)),
		js.Constructor(reflect.ValueOf(NewScopeSelectorWithSpec)),
	)
}