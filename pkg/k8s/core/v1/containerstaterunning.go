// Code generated by types_generator.go; DO NOT EDIT.

package v1

import (
	"reflect"

	"github.com/ohayocorp/anemos/pkg/js"

	
)

// ContainerStateRunning is a running state of a container.
type ContainerStateRunning struct {
	// Time at which the container was last (re-)started
	StartedAt *string `json:"startedAt,omitempty" yaml:"startedAt,omitempty"`
}

func NewContainerStateRunning() *ContainerStateRunning {
	return &ContainerStateRunning{}
}

func NewContainerStateRunningWithSpec(spec *ContainerStateRunning) *ContainerStateRunning {
	
	return spec
}

func RegisterContainerStateRunning(jsRuntime *js.JsRuntime) {
	jsRuntime.Type(reflect.TypeFor[ContainerStateRunning]()).JsNamespace("k8s.core.v1").Fields(
		js.Field("StartedAt"),
	).Constructors(
		js.Constructor(reflect.ValueOf(NewContainerStateRunning)),
		js.Constructor(reflect.ValueOf(NewContainerStateRunningWithSpec)),
	)
}