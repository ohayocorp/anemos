// Code generated by types_generator.go; DO NOT EDIT.

package v1

import (
	"reflect"

	"github.com/ohayocorp/anemos/pkg/js"

	
)

// VolumeNodeAffinity defines constraints that limit what nodes this volume can be accessed from.
type VolumeNodeAffinity struct {
	// Required specifies hard node constraints that must be met.
	Required *NodeSelector `json:"required,omitempty" yaml:"required,omitempty"`
}

func NewVolumeNodeAffinity() *VolumeNodeAffinity {
	return &VolumeNodeAffinity{}
}

func NewVolumeNodeAffinityWithSpec(spec *VolumeNodeAffinity) *VolumeNodeAffinity {
	
	return spec
}

func RegisterVolumeNodeAffinity(jsRuntime *js.JsRuntime) {
	jsRuntime.Type(reflect.TypeFor[VolumeNodeAffinity]()).JsNamespace("k8s.core.v1").Fields(
		js.Field("Required"),
	).Constructors(
		js.Constructor(reflect.ValueOf(NewVolumeNodeAffinity)),
		js.Constructor(reflect.ValueOf(NewVolumeNodeAffinityWithSpec)),
	)
}