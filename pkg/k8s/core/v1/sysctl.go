// Code generated by types_generator.go; DO NOT EDIT.

package v1

import (
	"reflect"

	"github.com/ohayocorp/anemos/pkg/js"

	
)

// Sysctl defines a kernel parameter to be set
type Sysctl struct {
	// Name of a property to set
	Name string `json:"name" yaml:"name"`

	// Value of a property to set
	Value string `json:"value" yaml:"value"`
}

func NewSysctl() *Sysctl {
	return &Sysctl{}
}

func NewSysctlWithSpec(spec *Sysctl) *Sysctl {
	
	return spec
}

func RegisterSysctl(jsRuntime *js.JsRuntime) {
	jsRuntime.Type(reflect.TypeFor[Sysctl]()).JsNamespace("k8s.core.v1").Fields(
		js.Field("Name"),
		js.Field("Value"),
	).Constructors(
		js.Constructor(reflect.ValueOf(NewSysctl)),
		js.Constructor(reflect.ValueOf(NewSysctlWithSpec)),
	)
}