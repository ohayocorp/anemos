// Code generated by types_generator.go; DO NOT EDIT.

package v1

import (
	"reflect"

	"github.com/ohayocorp/anemos/pkg/js"

	
)

// ResourceFieldSelector represents container resources (cpu, memory) and their output format
type ResourceFieldSelector struct {
	// Container name: required for volumes, optional for env vars
	ContainerName *string `json:"containerName,omitempty" yaml:"containerName,omitempty"`

	// Specifies the output format of the exposed resources, defaults to "1"
	Divisor any `json:"divisor,omitempty" yaml:"divisor,omitempty"`

	// Required: resource to select
	Resource string `json:"resource" yaml:"resource"`
}

func NewResourceFieldSelector() *ResourceFieldSelector {
	return &ResourceFieldSelector{}
}

func NewResourceFieldSelectorWithSpec(spec *ResourceFieldSelector) *ResourceFieldSelector {
	
	return spec
}

func RegisterResourceFieldSelector(jsRuntime *js.JsRuntime) {
	jsRuntime.Type(reflect.TypeFor[ResourceFieldSelector]()).JsNamespace("k8s.core.v1").Fields(
		js.Field("ContainerName"),
		js.Field("Divisor"),
		js.Field("Resource"),
	).Constructors(
		js.Constructor(reflect.ValueOf(NewResourceFieldSelector)),
		js.Constructor(reflect.ValueOf(NewResourceFieldSelectorWithSpec)),
	)
}