// Code generated by types_generator.go; DO NOT EDIT.

package v1

import (
	"reflect"

	"github.com/ohayocorp/anemos/pkg/js"

	
)

// ContainerExtendedResourceRequest has the mapping of container name, extended resource name to the device request name.
type ContainerExtendedResourceRequest struct {
	// The name of the container requesting resources.
	ContainerName string `json:"containerName" yaml:"containerName"`

	// The name of the request in the special ResourceClaim which corresponds to the extended resource.
	RequestName string `json:"requestName" yaml:"requestName"`

	// The name of the extended resource in that container which gets backed by DRA.
	ResourceName string `json:"resourceName" yaml:"resourceName"`
}

func NewContainerExtendedResourceRequest() *ContainerExtendedResourceRequest {
	return &ContainerExtendedResourceRequest{}
}

func NewContainerExtendedResourceRequestWithSpec(spec *ContainerExtendedResourceRequest) *ContainerExtendedResourceRequest {
	
	return spec
}

func RegisterContainerExtendedResourceRequest(jsRuntime *js.JsRuntime) {
	jsRuntime.Type(reflect.TypeFor[ContainerExtendedResourceRequest]()).JsNamespace("k8s.core.v1").Fields(
		js.Field("ContainerName"),
		js.Field("RequestName"),
		js.Field("ResourceName"),
	).Constructors(
		js.Constructor(reflect.ValueOf(NewContainerExtendedResourceRequest)),
		js.Constructor(reflect.ValueOf(NewContainerExtendedResourceRequestWithSpec)),
	)
}