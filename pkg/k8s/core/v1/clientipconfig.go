// Code generated by types_generator.go; DO NOT EDIT.

package v1

import (
	"reflect"

	"github.com/ohayocorp/anemos/pkg/js"

	
)

// ClientIPConfig represents the configurations of Client IP based session affinity.
type ClientIPConfig struct {
	// TimeoutSeconds specifies the seconds of ClientIP type session sticky time. The value must be >0 && <=86400(for 1 day) if ServiceAffinity == "ClientIP". Default value is 10800(for 3 hours).
	TimeoutSeconds *int `json:"timeoutSeconds,omitempty" yaml:"timeoutSeconds,omitempty"`
}

func NewClientIPConfig() *ClientIPConfig {
	return &ClientIPConfig{}
}

func NewClientIPConfigWithSpec(spec *ClientIPConfig) *ClientIPConfig {
	
	return spec
}

func RegisterClientIPConfig(jsRuntime *js.JsRuntime) {
	jsRuntime.Type(reflect.TypeFor[ClientIPConfig]()).JsNamespace("k8s.core.v1").Fields(
		js.Field("TimeoutSeconds"),
	).Constructors(
		js.Constructor(reflect.ValueOf(NewClientIPConfig)),
		js.Constructor(reflect.ValueOf(NewClientIPConfigWithSpec)),
	)
}