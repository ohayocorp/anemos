// Code generated by types_generator.go; DO NOT EDIT.

package v1

import (
	"reflect"

	"github.com/ohayocorp/anemos/pkg/js"

	
)

// Represents a Photon Controller persistent disk resource.
type PhotonPersistentDiskVolumeSource struct {
	// FsType is the filesystem type to mount. Must be a filesystem type supported by the host operating system. Ex. "ext4", "xfs", "ntfs". Implicitly inferred to be "ext4" if unspecified.
	FsType *string `json:"fsType,omitempty" yaml:"fsType,omitempty"`

	// PdID is the ID that identifies Photon Controller persistent disk
	PdID string `json:"pdID" yaml:"pdID"`
}

func NewPhotonPersistentDiskVolumeSource() *PhotonPersistentDiskVolumeSource {
	return &PhotonPersistentDiskVolumeSource{}
}

func NewPhotonPersistentDiskVolumeSourceWithSpec(spec *PhotonPersistentDiskVolumeSource) *PhotonPersistentDiskVolumeSource {
	
	return spec
}

func RegisterPhotonPersistentDiskVolumeSource(jsRuntime *js.JsRuntime) {
	jsRuntime.Type(reflect.TypeFor[PhotonPersistentDiskVolumeSource]()).JsNamespace("k8s.core.v1").Fields(
		js.Field("FsType"),
		js.Field("PdID"),
	).Constructors(
		js.Constructor(reflect.ValueOf(NewPhotonPersistentDiskVolumeSource)),
		js.Constructor(reflect.ValueOf(NewPhotonPersistentDiskVolumeSourceWithSpec)),
	)
}