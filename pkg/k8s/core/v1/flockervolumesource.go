// Code generated by types_generator.go; DO NOT EDIT.

package v1

import (
	"reflect"

	"github.com/ohayocorp/anemos/pkg/js"

	
)

// Represents a Flocker volume mounted by the Flocker agent. One and only one of datasetName and datasetUUID should be set. Flocker volumes do not support ownership management or SELinux relabeling.
type FlockerVolumeSource struct {
	// DatasetName is Name of the dataset stored as metadata -> name on the dataset for Flocker should be considered as deprecated
	DatasetName *string `json:"datasetName,omitempty" yaml:"datasetName,omitempty"`

	// DatasetUUID is the UUID of the dataset. This is unique identifier of a Flocker dataset
	DatasetUUID *string `json:"datasetUUID,omitempty" yaml:"datasetUUID,omitempty"`
}

func NewFlockerVolumeSource() *FlockerVolumeSource {
	return &FlockerVolumeSource{}
}

func NewFlockerVolumeSourceWithSpec(spec *FlockerVolumeSource) *FlockerVolumeSource {
	
	return spec
}

func RegisterFlockerVolumeSource(jsRuntime *js.JsRuntime) {
	jsRuntime.Type(reflect.TypeFor[FlockerVolumeSource]()).JsNamespace("k8s.core.v1").Fields(
		js.Field("DatasetName"),
		js.Field("DatasetUUID"),
	).Constructors(
		js.Constructor(reflect.ValueOf(NewFlockerVolumeSource)),
		js.Constructor(reflect.ValueOf(NewFlockerVolumeSourceWithSpec)),
	)
}