// Code generated by types_generator.go; DO NOT EDIT.

package v1

import (
	"reflect"

	"github.com/ohayocorp/anemos/pkg/js"

	
)

// LocalObjectReference contains enough information to let you locate the referenced object inside the same namespace.
type LocalObjectReference struct {
	// Name of the referent. This field is effectively required, but due to backwards compatibility is allowed to be empty. Instances of this type with an empty value here are almost certainly wrong. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
	Name *string `json:"name,omitempty" yaml:"name,omitempty"`
}

func NewLocalObjectReference() *LocalObjectReference {
	return &LocalObjectReference{}
}

func NewLocalObjectReferenceWithSpec(spec *LocalObjectReference) *LocalObjectReference {
	
	return spec
}

func RegisterLocalObjectReference(jsRuntime *js.JsRuntime) {
	jsRuntime.Type(reflect.TypeFor[LocalObjectReference]()).JsNamespace("k8s.core.v1").Fields(
		js.Field("Name"),
	).Constructors(
		js.Constructor(reflect.ValueOf(NewLocalObjectReference)),
		js.Constructor(reflect.ValueOf(NewLocalObjectReferenceWithSpec)),
	)
}