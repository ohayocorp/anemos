// Code generated by types_generator.go; DO NOT EDIT.

package v1

import (
	"reflect"

	"github.com/ohayocorp/anemos/pkg/js"

	
)

// HostAlias holds the mapping between IP and hostnames that will be injected as an entry in the pod's hosts file.
type HostAlias struct {
	// Hostnames for the above IP address.
	Hostnames *[]string `json:"hostnames,omitempty" yaml:"hostnames,omitempty"`

	// IP address of the host file entry.
	Ip string `json:"ip" yaml:"ip"`
}

func NewHostAlias() *HostAlias {
	return &HostAlias{}
}

func NewHostAliasWithSpec(spec *HostAlias) *HostAlias {
	
	return spec
}

func RegisterHostAlias(jsRuntime *js.JsRuntime) {
	jsRuntime.Type(reflect.TypeFor[HostAlias]()).JsNamespace("k8s.core.v1").Fields(
		js.Field("Hostnames"),
		js.Field("Ip"),
	).Constructors(
		js.Constructor(reflect.ValueOf(NewHostAlias)),
		js.Constructor(reflect.ValueOf(NewHostAliasWithSpec)),
	)
}