// Code generated by types_generator.go; DO NOT EDIT.

package v1

import (
	"reflect"

	"github.com/ohayocorp/anemos/pkg/js"

	
)

// Represents a Ceph Filesystem mount that lasts the lifetime of a pod Cephfs volumes do not support ownership management or SELinux relabeling.
type CephFSPersistentVolumeSource struct {
	// Monitors is Required: Monitors is a collection of Ceph monitors More info: https://examples.k8s.io/volumes/cephfs/README.md#how-to-use-it
	Monitors []string `json:"monitors" yaml:"monitors"`

	// Path is Optional: Used as the mounted root, rather than the full Ceph tree, default is /
	Path *string `json:"path,omitempty" yaml:"path,omitempty"`

	// ReadOnly is Optional: Defaults to false (read/write). ReadOnly here will force the ReadOnly setting in VolumeMounts. More info: https://examples.k8s.io/volumes/cephfs/README.md#how-to-use-it
	ReadOnly *bool `json:"readOnly,omitempty" yaml:"readOnly,omitempty"`

	// SecretFile is Optional: SecretFile is the path to key ring for User, default is /etc/ceph/user.secret More info: https://examples.k8s.io/volumes/cephfs/README.md#how-to-use-it
	SecretFile *string `json:"secretFile,omitempty" yaml:"secretFile,omitempty"`

	// SecretRef is Optional: SecretRef is reference to the authentication secret for User, default is empty. More info: https://examples.k8s.io/volumes/cephfs/README.md#how-to-use-it
	SecretRef *SecretReference `json:"secretRef,omitempty" yaml:"secretRef,omitempty"`

	// User is Optional: User is the rados user name, default is admin More info: https://examples.k8s.io/volumes/cephfs/README.md#how-to-use-it
	User *string `json:"user,omitempty" yaml:"user,omitempty"`
}

func NewCephFSPersistentVolumeSource() *CephFSPersistentVolumeSource {
	return &CephFSPersistentVolumeSource{}
}

func NewCephFSPersistentVolumeSourceWithSpec(spec *CephFSPersistentVolumeSource) *CephFSPersistentVolumeSource {
	
	return spec
}

func RegisterCephFSPersistentVolumeSource(jsRuntime *js.JsRuntime) {
	jsRuntime.Type(reflect.TypeFor[CephFSPersistentVolumeSource]()).JsNamespace("k8s.core.v1").Fields(
		js.Field("Monitors"),
		js.Field("Path"),
		js.Field("ReadOnly"),
		js.Field("SecretFile"),
		js.Field("SecretRef"),
		js.Field("User"),
	).Constructors(
		js.Constructor(reflect.ValueOf(NewCephFSPersistentVolumeSource)),
		js.Constructor(reflect.ValueOf(NewCephFSPersistentVolumeSourceWithSpec)),
	)
}