// Code generated by types_generator.go; DO NOT EDIT.

package v1

import (
	"reflect"

	"github.com/ohayocorp/anemos/pkg/js"

	
)

// PriorityLevelConfigurationSpec specifies the configuration of a priority level.
type PriorityLevelConfigurationSpec struct {
	// `exempt` specifies how requests are handled for an exempt priority level. This field MUST be empty if `type` is `"Limited"`. This field MAY be non-empty if `type` is `"Exempt"`. If empty and `type` is `"Exempt"` then the default values for `ExemptPriorityLevelConfiguration` apply.
	Exempt *ExemptPriorityLevelConfiguration `json:"exempt,omitempty" yaml:"exempt,omitempty"`

	// `limited` specifies how requests are handled for a Limited priority level. This field must be non-empty if and only if `type` is `"Limited"`.
	Limited *LimitedPriorityLevelConfiguration `json:"limited,omitempty" yaml:"limited,omitempty"`

	// `type` indicates whether this priority level is subject to limitation on request execution.  A value of `"Exempt"` means that requests of this priority level are not subject to a limit (and thus are never queued) and do not detract from the capacity made available to other priority levels.  A value of `"Limited"` means that (a) requests of this priority level _are_ subject to limits and (b) some of the server's limited capacity is made available exclusively to this priority level. Required.
	Type string `json:"type" yaml:"type"`
}

func NewPriorityLevelConfigurationSpec() *PriorityLevelConfigurationSpec {
	return &PriorityLevelConfigurationSpec{}
}

func NewPriorityLevelConfigurationSpecWithSpec(spec *PriorityLevelConfigurationSpec) *PriorityLevelConfigurationSpec {
	
	return spec
}

func RegisterPriorityLevelConfigurationSpec(jsRuntime *js.JsRuntime) {
	jsRuntime.Type(reflect.TypeFor[PriorityLevelConfigurationSpec]()).JsNamespace("k8s.flowcontrol.v1").Fields(
		js.Field("Exempt"),
		js.Field("Limited"),
		js.Field("Type"),
	).Constructors(
		js.Constructor(reflect.ValueOf(NewPriorityLevelConfigurationSpec)),
		js.Constructor(reflect.ValueOf(NewPriorityLevelConfigurationSpecWithSpec)),
	)
}