// Code generated by types_generator.go; DO NOT EDIT.

package v1

import (
	"reflect"

	"github.com/ohayocorp/anemos/pkg/js"

	
)

// Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.
type Time struct {
	
}

func NewTime() *Time {
	return &Time{}
}

func NewTimeWithSpec(spec *Time) *Time {
	
	return spec
}

func RegisterTime(jsRuntime *js.JsRuntime) {
	jsRuntime.Type(reflect.TypeFor[Time]()).JsNamespace("k8s.apimachinery.meta.v1").Fields(
		
	).Constructors(
		js.Constructor(reflect.ValueOf(NewTime)),
		js.Constructor(reflect.ValueOf(NewTimeWithSpec)),
	)
}