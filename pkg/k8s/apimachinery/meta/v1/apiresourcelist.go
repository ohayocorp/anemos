// Code generated by types_generator.go; DO NOT EDIT.

package v1

import (
	"reflect"

	"github.com/ohayocorp/anemos/pkg/js"

	
)

// APIResourceList is a list of APIResource, it is used to expose the name of the resources supported in a specific group and version, and if the resource is namespaced.
type APIResourceList struct {
	// APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
	ApiVersion *string `json:"apiVersion,omitempty" yaml:"apiVersion,omitempty"`

	// GroupVersion is the group and version this APIResourceList is for.
	GroupVersion string `json:"groupVersion" yaml:"groupVersion"`

	// Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
	Kind *string `json:"kind,omitempty" yaml:"kind,omitempty"`

	// Resources contains the name of the resources and if they are namespaced.
	Resources []*APIResource `json:"resources" yaml:"resources"`
}

func NewAPIResourceList() *APIResourceList {
	return &APIResourceList{}
}

func NewAPIResourceListWithSpec(spec *APIResourceList) *APIResourceList {
	version := "v1"
	kind := "APIResourceList"
	
	spec.ApiVersion = &version
	spec.Kind = &kind
	return spec
}

func RegisterAPIResourceList(jsRuntime *js.JsRuntime) {
	jsRuntime.Type(reflect.TypeFor[APIResourceList]()).JsNamespace("k8s.apimachinery.meta.v1").Fields(
		js.Field("ApiVersion"),
		js.Field("GroupVersion"),
		js.Field("Kind"),
		js.Field("Resources"),
	).Constructors(
		js.Constructor(reflect.ValueOf(NewAPIResourceList)),
		js.Constructor(reflect.ValueOf(NewAPIResourceListWithSpec)),
	)
}