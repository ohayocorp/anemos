// Code generated by types_generator.go; DO NOT EDIT.

package v1

import (
	"reflect"

	"github.com/ohayocorp/anemos/pkg/js"

	
)

// GroupVersion contains the "group/version" and "version" string of a version. It is made a struct to keep extensibility.
type GroupVersionForDiscovery struct {
	// GroupVersion specifies the API group and version in the form "group/version"
	GroupVersion string `json:"groupVersion" yaml:"groupVersion"`

	// Version specifies the version in the form of "version". This is to save the clients the trouble of splitting the GroupVersion.
	Version string `json:"version" yaml:"version"`
}

func NewGroupVersionForDiscovery() *GroupVersionForDiscovery {
	return &GroupVersionForDiscovery{}
}

func NewGroupVersionForDiscoveryWithSpec(spec *GroupVersionForDiscovery) *GroupVersionForDiscovery {
	
	return spec
}

func RegisterGroupVersionForDiscovery(jsRuntime *js.JsRuntime) {
	jsRuntime.Type(reflect.TypeFor[GroupVersionForDiscovery]()).JsNamespace("k8s.apimachinery.meta.v1").Fields(
		js.Field("GroupVersion"),
		js.Field("Version"),
	).Constructors(
		js.Constructor(reflect.ValueOf(NewGroupVersionForDiscovery)),
		js.Constructor(reflect.ValueOf(NewGroupVersionForDiscoveryWithSpec)),
	)
}