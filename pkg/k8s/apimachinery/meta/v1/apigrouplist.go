// Code generated by types_generator.go; DO NOT EDIT.

package v1

import (
	"reflect"

	"github.com/ohayocorp/anemos/pkg/js"

	
)

// APIGroupList is a list of APIGroup, to allow clients to discover the API at /apis.
type APIGroupList struct {
	// APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
	ApiVersion *string `json:"apiVersion,omitempty" yaml:"apiVersion,omitempty"`

	// Groups is a list of APIGroup.
	Groups []*APIGroup `json:"groups" yaml:"groups"`

	// Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
	Kind *string `json:"kind,omitempty" yaml:"kind,omitempty"`
}

func NewAPIGroupList() *APIGroupList {
	return &APIGroupList{}
}

func NewAPIGroupListWithSpec(spec *APIGroupList) *APIGroupList {
	version := "v1"
	kind := "APIGroupList"
	
	spec.ApiVersion = &version
	spec.Kind = &kind
	return spec
}

func RegisterAPIGroupList(jsRuntime *js.JsRuntime) {
	jsRuntime.Type(reflect.TypeFor[APIGroupList]()).JsNamespace("k8s.apimachinery.meta.v1").Fields(
		js.Field("ApiVersion"),
		js.Field("Groups"),
		js.Field("Kind"),
	).Constructors(
		js.Constructor(reflect.ValueOf(NewAPIGroupList)),
		js.Constructor(reflect.ValueOf(NewAPIGroupListWithSpec)),
	)
}