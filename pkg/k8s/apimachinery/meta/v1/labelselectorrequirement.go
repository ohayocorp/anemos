// Code generated by types_generator.go; DO NOT EDIT.

package v1

import (
	"reflect"

	"github.com/ohayocorp/anemos/pkg/js"

	
)

// A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.
type LabelSelectorRequirement struct {
	// Key is the label key that the selector applies to.
	Key string `json:"key" yaml:"key"`

	// Operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.
	Operator string `json:"operator" yaml:"operator"`

	// Values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.
	Values *[]string `json:"values,omitempty" yaml:"values,omitempty"`
}

func NewLabelSelectorRequirement() *LabelSelectorRequirement {
	return &LabelSelectorRequirement{}
}

func NewLabelSelectorRequirementWithSpec(spec *LabelSelectorRequirement) *LabelSelectorRequirement {
	
	return spec
}

func RegisterLabelSelectorRequirement(jsRuntime *js.JsRuntime) {
	jsRuntime.Type(reflect.TypeFor[LabelSelectorRequirement]()).JsNamespace("k8s.apimachinery.meta.v1").Fields(
		js.Field("Key"),
		js.Field("Operator"),
		js.Field("Values"),
	).Constructors(
		js.Constructor(reflect.ValueOf(NewLabelSelectorRequirement)),
		js.Constructor(reflect.ValueOf(NewLabelSelectorRequirementWithSpec)),
	)
}