// Code generated by types_generator.go; DO NOT EDIT.

package v1

import (
	"reflect"

	"github.com/ohayocorp/anemos/pkg/js"

	
)

// ServerAddressByClientCIDR helps the client to determine the server address that they should use, depending on the clientCIDR that they match.
type ServerAddressByClientCIDR struct {
	// The CIDR with which clients can match their IP to figure out the server address that they should use.
	ClientCIDR string `json:"clientCIDR" yaml:"clientCIDR"`

	// Address of this server, suitable for a client that matches the above CIDR. This can be a hostname, hostname:port, IP or IP:port.
	ServerAddress string `json:"serverAddress" yaml:"serverAddress"`
}

func NewServerAddressByClientCIDR() *ServerAddressByClientCIDR {
	return &ServerAddressByClientCIDR{}
}

func NewServerAddressByClientCIDRWithSpec(spec *ServerAddressByClientCIDR) *ServerAddressByClientCIDR {
	
	return spec
}

func RegisterServerAddressByClientCIDR(jsRuntime *js.JsRuntime) {
	jsRuntime.Type(reflect.TypeFor[ServerAddressByClientCIDR]()).JsNamespace("k8s.apimachinery.meta.v1").Fields(
		js.Field("ClientCIDR"),
		js.Field("ServerAddress"),
	).Constructors(
		js.Constructor(reflect.ValueOf(NewServerAddressByClientCIDR)),
		js.Constructor(reflect.ValueOf(NewServerAddressByClientCIDRWithSpec)),
	)
}