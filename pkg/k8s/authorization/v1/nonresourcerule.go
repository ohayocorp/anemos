// Code generated by types_generator.go; DO NOT EDIT.

package v1

import (
	"reflect"

	"github.com/ohayocorp/anemos/pkg/js"

	
)

// NonResourceRule holds information that describes a rule for the non-resource
type NonResourceRule struct {
	// NonResourceURLs is a set of partial urls that a user should have access to.  *s are allowed, but only as the full, final step in the path.  "*" means all.
	NonResourceURLs *[]string `json:"nonResourceURLs,omitempty" yaml:"nonResourceURLs,omitempty"`

	// Verb is a list of kubernetes non-resource API verbs, like: get, post, put, delete, patch, head, options.  "*" means all.
	Verbs []string `json:"verbs" yaml:"verbs"`
}

func NewNonResourceRule() *NonResourceRule {
	return &NonResourceRule{}
}

func NewNonResourceRuleWithSpec(spec *NonResourceRule) *NonResourceRule {
	
	return spec
}

func RegisterNonResourceRule(jsRuntime *js.JsRuntime) {
	jsRuntime.Type(reflect.TypeFor[NonResourceRule]()).JsNamespace("k8s.authorization.v1").Fields(
		js.Field("NonResourceURLs"),
		js.Field("Verbs"),
	).Constructors(
		js.Constructor(reflect.ValueOf(NewNonResourceRule)),
		js.Constructor(reflect.ValueOf(NewNonResourceRuleWithSpec)),
	)
}