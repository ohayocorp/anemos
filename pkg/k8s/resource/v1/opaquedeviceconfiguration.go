// Code generated by types_generator.go; DO NOT EDIT.

package v1

import (
	"reflect"

	"github.com/ohayocorp/anemos/pkg/js"

	
)

// OpaqueDeviceConfiguration contains configuration parameters for a driver in a format defined by the driver vendor.
type OpaqueDeviceConfiguration struct {
	// Driver is used to determine which kubelet plugin needs to be passed these configuration parameters.
	// An admission policy provided by the driver developer could use this to decide whether it needs to validate them.
	// Must be a DNS subdomain and should end with a DNS domain owned by the vendor of the driver.
	Driver string `json:"driver" yaml:"driver"`

	// Parameters can contain arbitrary data. It is the responsibility of the driver developer to handle validation and versioning. Typically this includes self-identification and a version ("kind" + "apiVersion" for Kubernetes types), with conversion between different versions.
	// The length of the raw data must be smaller or equal to 10 Ki.
	Parameters any `json:"parameters" yaml:"parameters"`
}

func NewOpaqueDeviceConfiguration() *OpaqueDeviceConfiguration {
	return &OpaqueDeviceConfiguration{}
}

func NewOpaqueDeviceConfigurationWithSpec(spec *OpaqueDeviceConfiguration) *OpaqueDeviceConfiguration {
	
	return spec
}

func RegisterOpaqueDeviceConfiguration(jsRuntime *js.JsRuntime) {
	jsRuntime.Type(reflect.TypeFor[OpaqueDeviceConfiguration]()).JsNamespace("k8s.resource.v1").Fields(
		js.Field("Driver"),
		js.Field("Parameters"),
	).Constructors(
		js.Constructor(reflect.ValueOf(NewOpaqueDeviceConfiguration)),
		js.Constructor(reflect.ValueOf(NewOpaqueDeviceConfigurationWithSpec)),
	)
}