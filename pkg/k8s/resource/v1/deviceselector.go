// Code generated by types_generator.go; DO NOT EDIT.

package v1

import (
	"reflect"

	"github.com/ohayocorp/anemos/pkg/js"

	
)

// DeviceSelector must have exactly one field set.
type DeviceSelector struct {
	// CEL contains a CEL expression for selecting a device.
	Cel *CELDeviceSelector `json:"cel,omitempty" yaml:"cel,omitempty"`
}

func NewDeviceSelector() *DeviceSelector {
	return &DeviceSelector{}
}

func NewDeviceSelectorWithSpec(spec *DeviceSelector) *DeviceSelector {
	
	return spec
}

func RegisterDeviceSelector(jsRuntime *js.JsRuntime) {
	jsRuntime.Type(reflect.TypeFor[DeviceSelector]()).JsNamespace("k8s.resource.v1").Fields(
		js.Field("Cel"),
	).Constructors(
		js.Constructor(reflect.ValueOf(NewDeviceSelector)),
		js.Constructor(reflect.ValueOf(NewDeviceSelectorWithSpec)),
	)
}