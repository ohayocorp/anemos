// Code generated by types_generator.go; DO NOT EDIT.

package v1

import (
	"reflect"

	"github.com/ohayocorp/anemos/pkg/js"

	
)

// DeviceAttribute must have exactly one field set.
type DeviceAttribute struct {
	// BoolValue is a true/false value.
	Bool *bool `json:"bool,omitempty" yaml:"bool,omitempty"`

	// IntValue is a number.
	Int *int `json:"int,omitempty" yaml:"int,omitempty"`

	// StringValue is a string. Must not be longer than 64 characters.
	String *string `json:"string,omitempty" yaml:"string,omitempty"`

	// VersionValue is a semantic version according to semver.org spec 2.0.0. Must not be longer than 64 characters.
	Version *string `json:"version,omitempty" yaml:"version,omitempty"`
}

func NewDeviceAttribute() *DeviceAttribute {
	return &DeviceAttribute{}
}

func NewDeviceAttributeWithSpec(spec *DeviceAttribute) *DeviceAttribute {
	
	return spec
}

func RegisterDeviceAttribute(jsRuntime *js.JsRuntime) {
	jsRuntime.Type(reflect.TypeFor[DeviceAttribute]()).JsNamespace("k8s.resource.v1").Fields(
		js.Field("Bool"),
		js.Field("Int"),
		js.Field("String"),
		js.Field("Version"),
	).Constructors(
		js.Constructor(reflect.ValueOf(NewDeviceAttribute)),
		js.Constructor(reflect.ValueOf(NewDeviceAttributeWithSpec)),
	)
}