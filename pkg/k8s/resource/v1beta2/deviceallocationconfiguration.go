// Code generated by types_generator.go; DO NOT EDIT.

package v1beta2

import (
	"reflect"

	"github.com/ohayocorp/anemos/pkg/js"

	
)

// DeviceAllocationConfiguration gets embedded in an AllocationResult.
type DeviceAllocationConfiguration struct {
	// Opaque provides driver-specific configuration parameters.
	Opaque *OpaqueDeviceConfiguration `json:"opaque,omitempty" yaml:"opaque,omitempty"`

	// Requests lists the names of requests where the configuration applies. If empty, its applies to all requests.
	// References to subrequests must include the name of the main request and may include the subrequest using the format <main request>[/<subrequest>]. If just the main request is given, the configuration applies to all subrequests.
	Requests *[]string `json:"requests,omitempty" yaml:"requests,omitempty"`

	// Source records whether the configuration comes from a class and thus is not something that a normal user would have been able to set or from a claim.
	Source string `json:"source" yaml:"source"`
}

func NewDeviceAllocationConfiguration() *DeviceAllocationConfiguration {
	return &DeviceAllocationConfiguration{}
}

func NewDeviceAllocationConfigurationWithSpec(spec *DeviceAllocationConfiguration) *DeviceAllocationConfiguration {
	
	return spec
}

func RegisterDeviceAllocationConfiguration(jsRuntime *js.JsRuntime) {
	jsRuntime.Type(reflect.TypeFor[DeviceAllocationConfiguration]()).JsNamespace("k8s.resource.v1beta2").Fields(
		js.Field("Opaque"),
		js.Field("Requests"),
		js.Field("Source"),
	).Constructors(
		js.Constructor(reflect.ValueOf(NewDeviceAllocationConfiguration)),
		js.Constructor(reflect.ValueOf(NewDeviceAllocationConfigurationWithSpec)),
	)
}