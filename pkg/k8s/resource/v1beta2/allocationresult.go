// Code generated by types_generator.go; DO NOT EDIT.

package v1beta2

import (
	"reflect"

	"github.com/ohayocorp/anemos/pkg/js"

	corev1 "github.com/ohayocorp/anemos/pkg/k8s/core/v1"
)

// AllocationResult contains attributes of an allocated resource.
type AllocationResult struct {
	// AllocationTimestamp stores the time when the resources were allocated. This field is not guaranteed to be set, in which case that time is unknown.
	// This is an alpha field and requires enabling the DRADeviceBindingConditions and DRAResourceClaimDeviceStatus feature gate.
	AllocationTimestamp *string `json:"allocationTimestamp,omitempty" yaml:"allocationTimestamp,omitempty"`

	// Devices is the result of allocating devices.
	Devices *DeviceAllocationResult `json:"devices,omitempty" yaml:"devices,omitempty"`

	// NodeSelector defines where the allocated resources are available. If unset, they are available everywhere.
	NodeSelector *corev1.NodeSelector `json:"nodeSelector,omitempty" yaml:"nodeSelector,omitempty"`
}

func NewAllocationResult() *AllocationResult {
	return &AllocationResult{}
}

func NewAllocationResultWithSpec(spec *AllocationResult) *AllocationResult {
	
	return spec
}

func RegisterAllocationResult(jsRuntime *js.JsRuntime) {
	jsRuntime.Type(reflect.TypeFor[AllocationResult]()).JsNamespace("k8s.resource.v1beta2").Fields(
		js.Field("AllocationTimestamp"),
		js.Field("Devices"),
		js.Field("NodeSelector"),
	).Constructors(
		js.Constructor(reflect.ValueOf(NewAllocationResult)),
		js.Constructor(reflect.ValueOf(NewAllocationResultWithSpec)),
	)
}