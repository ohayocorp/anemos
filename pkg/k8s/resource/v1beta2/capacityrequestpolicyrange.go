// Code generated by types_generator.go; DO NOT EDIT.

package v1beta2

import (
	"reflect"

	"github.com/ohayocorp/anemos/pkg/js"

	
)

// CapacityRequestPolicyRange defines a valid range for consumable capacity values.
//   - If the requested amount is less than Min, it is rounded up to the Min value.
//   - If Step is set and the requested amount is between Min and Max but not aligned with Step,
//     it will be rounded up to the next value equal to Min + (n * Step).
//   - If Step is not set, the requested amount is used as-is if it falls within the range Min to Max (if set).
//   - If the requested or rounded amount exceeds Max (if set), the request does not satisfy the policy,
//     and the device cannot be allocated.
type CapacityRequestPolicyRange struct {
	// Max defines the upper limit for capacity that can be requested.
	// Max must be less than or equal to the capacity value. Min and requestPolicy.default must be less than or equal to the maximum.
	Max any `json:"max,omitempty" yaml:"max,omitempty"`

	// Min specifies the minimum capacity allowed for a consumption request.
	// Min must be greater than or equal to zero, and less than or equal to the capacity value. requestPolicy.default must be more than or equal to the minimum.
	Min any `json:"min" yaml:"min"`

	// Step defines the step size between valid capacity amounts within the range.
	// Max (if set) and requestPolicy.default must be a multiple of Step. Min + Step must be less than or equal to the capacity value.
	Step any `json:"step,omitempty" yaml:"step,omitempty"`
}

func NewCapacityRequestPolicyRange() *CapacityRequestPolicyRange {
	return &CapacityRequestPolicyRange{}
}

func NewCapacityRequestPolicyRangeWithSpec(spec *CapacityRequestPolicyRange) *CapacityRequestPolicyRange {
	
	return spec
}

func RegisterCapacityRequestPolicyRange(jsRuntime *js.JsRuntime) {
	jsRuntime.Type(reflect.TypeFor[CapacityRequestPolicyRange]()).JsNamespace("k8s.resource.v1beta2").Fields(
		js.Field("Max"),
		js.Field("Min"),
		js.Field("Step"),
	).Constructors(
		js.Constructor(reflect.ValueOf(NewCapacityRequestPolicyRange)),
		js.Constructor(reflect.ValueOf(NewCapacityRequestPolicyRangeWithSpec)),
	)
}