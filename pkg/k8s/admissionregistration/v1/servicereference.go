// Code generated by types_generator.go; DO NOT EDIT.

package v1

import (
	"reflect"

	"github.com/ohayocorp/anemos/pkg/js"

	
)

// ServiceReference holds a reference to Service.legacy.k8s.io
type ServiceReference struct {
	// `name` is the name of the service. Required
	Name string `json:"name" yaml:"name"`

	// `namespace` is the namespace of the service. Required
	Namespace string `json:"namespace" yaml:"namespace"`

	// `path` is an optional URL path which will be sent in any request to this service.
	Path *string `json:"path,omitempty" yaml:"path,omitempty"`

	// If specified, the port on the service that hosting webhook. Default to 443 for backward compatibility. `port` should be a valid port number (1-65535, inclusive).
	Port *int `json:"port,omitempty" yaml:"port,omitempty"`
}

func NewServiceReference() *ServiceReference {
	return &ServiceReference{}
}

func NewServiceReferenceWithSpec(spec *ServiceReference) *ServiceReference {
	
	return spec
}

func RegisterServiceReference(jsRuntime *js.JsRuntime) {
	jsRuntime.Type(reflect.TypeFor[ServiceReference]()).JsNamespace("k8s.admissionregistration.v1").Fields(
		js.Field("Name"),
		js.Field("Namespace"),
		js.Field("Path"),
		js.Field("Port"),
	).Constructors(
		js.Constructor(reflect.ValueOf(NewServiceReference)),
		js.Constructor(reflect.ValueOf(NewServiceReferenceWithSpec)),
	)
}