// Code generated by types_generator.go; DO NOT EDIT.

package v1

import (
	"reflect"

	"github.com/ohayocorp/anemos/pkg/js"

	apimachinerymetav1 "github.com/ohayocorp/anemos/pkg/k8s/apimachinery/meta/v1"
)

// ValidatingAdmissionPolicyStatus represents the status of an admission validation policy.
type ValidatingAdmissionPolicyStatus struct {
	// The conditions represent the latest available observations of a policy's current state.
	Conditions []*apimachinerymetav1.Condition `json:"conditions,omitempty" yaml:"conditions,omitempty"`

	// The generation observed by the controller.
	ObservedGeneration *int `json:"observedGeneration,omitempty" yaml:"observedGeneration,omitempty"`

	// The results of type checking for each expression. Presence of this field indicates the completion of the type checking.
	TypeChecking *TypeChecking `json:"typeChecking,omitempty" yaml:"typeChecking,omitempty"`
}

func NewValidatingAdmissionPolicyStatus() *ValidatingAdmissionPolicyStatus {
	return &ValidatingAdmissionPolicyStatus{}
}

func NewValidatingAdmissionPolicyStatusWithSpec(spec *ValidatingAdmissionPolicyStatus) *ValidatingAdmissionPolicyStatus {
	
	return spec
}

func RegisterValidatingAdmissionPolicyStatus(jsRuntime *js.JsRuntime) {
	jsRuntime.Type(reflect.TypeFor[ValidatingAdmissionPolicyStatus]()).JsNamespace("k8s.admissionregistration.v1").Fields(
		js.Field("Conditions"),
		js.Field("ObservedGeneration"),
		js.Field("TypeChecking"),
	).Constructors(
		js.Constructor(reflect.ValueOf(NewValidatingAdmissionPolicyStatus)),
		js.Constructor(reflect.ValueOf(NewValidatingAdmissionPolicyStatusWithSpec)),
	)
}