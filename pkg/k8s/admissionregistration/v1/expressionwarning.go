// Code generated by types_generator.go; DO NOT EDIT.

package v1

import (
	"reflect"

	"github.com/ohayocorp/anemos/pkg/js"

	
)

// ExpressionWarning is a warning information that targets a specific expression.
type ExpressionWarning struct {
	// The path to the field that refers the expression. For example, the reference to the expression of the first item of validations is "spec.validations[0].expression"
	FieldRef string `json:"fieldRef" yaml:"fieldRef"`

	// The content of type checking information in a human-readable form. Each line of the warning contains the type that the expression is checked against, followed by the type check error from the compiler.
	Warning string `json:"warning" yaml:"warning"`
}

func NewExpressionWarning() *ExpressionWarning {
	return &ExpressionWarning{}
}

func NewExpressionWarningWithSpec(spec *ExpressionWarning) *ExpressionWarning {
	
	return spec
}

func RegisterExpressionWarning(jsRuntime *js.JsRuntime) {
	jsRuntime.Type(reflect.TypeFor[ExpressionWarning]()).JsNamespace("k8s.admissionregistration.v1").Fields(
		js.Field("FieldRef"),
		js.Field("Warning"),
	).Constructors(
		js.Constructor(reflect.ValueOf(NewExpressionWarning)),
		js.Constructor(reflect.ValueOf(NewExpressionWarningWithSpec)),
	)
}