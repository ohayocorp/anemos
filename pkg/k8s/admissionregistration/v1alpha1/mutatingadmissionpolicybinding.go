// Code generated by types_generator.go; DO NOT EDIT.

package v1alpha1

import (
	"reflect"

	"github.com/ohayocorp/anemos/pkg/js"

	apimachinerymetav1 "github.com/ohayocorp/anemos/pkg/k8s/apimachinery/meta/v1"
)

// MutatingAdmissionPolicyBinding binds the MutatingAdmissionPolicy with parametrized resources. MutatingAdmissionPolicyBinding and the optional parameter resource together define how cluster administrators configure policies for clusters.
// For a given admission request, each binding will cause its policy to be evaluated N times, where N is 1 for policies/bindings that don't use params, otherwise N is the number of parameters selected by the binding. Each evaluation is constrained by a [runtime cost budget](https://kubernetes.io/docs/reference/using-api/cel/#runtime-cost-budget).
// Adding/removing policies, bindings, or params can not affect whether a given (policy, binding, param) combination is within its own CEL budget.
type MutatingAdmissionPolicyBinding struct {
	// APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
	ApiVersion *string `json:"apiVersion,omitempty" yaml:"apiVersion,omitempty"`

	// Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
	Kind *string `json:"kind,omitempty" yaml:"kind,omitempty"`

	// Standard object metadata; More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata.
	Metadata *apimachinerymetav1.ObjectMeta `json:"metadata,omitempty" yaml:"metadata,omitempty"`

	// Specification of the desired behavior of the MutatingAdmissionPolicyBinding.
	Spec *MutatingAdmissionPolicyBindingSpec `json:"spec,omitempty" yaml:"spec,omitempty"`
}

func NewMutatingAdmissionPolicyBinding() *MutatingAdmissionPolicyBinding {
	return &MutatingAdmissionPolicyBinding{}
}

func NewMutatingAdmissionPolicyBindingWithSpec(spec *MutatingAdmissionPolicyBinding) *MutatingAdmissionPolicyBinding {
	version := "v1alpha1"
	kind := "MutatingAdmissionPolicyBinding"
	
	spec.ApiVersion = &version
	spec.Kind = &kind
	return spec
}

func RegisterMutatingAdmissionPolicyBinding(jsRuntime *js.JsRuntime) {
	jsRuntime.Type(reflect.TypeFor[MutatingAdmissionPolicyBinding]()).JsNamespace("k8s.admissionregistration.v1alpha1").Fields(
		js.Field("ApiVersion"),
		js.Field("Kind"),
		js.Field("Metadata"),
		js.Field("Spec"),
	).Constructors(
		js.Constructor(reflect.ValueOf(NewMutatingAdmissionPolicyBinding)),
		js.Constructor(reflect.ValueOf(NewMutatingAdmissionPolicyBindingWithSpec)),
	)
}